{"title":"Centos 下安装 MYSQL(mariadb) + 主从复制","slug":"linux 项目部署/[Linux] Centos 下使用 MYSQL(mariadb) + 主从复制","date":"2021-01-18T15:05:12.247Z","updated":"2021-01-18T15:06:45.843Z","comments":true,"path":"api/articles/linux 项目部署/[Linux] Centos 下使用 MYSQL(mariadb) + 主从复制.json","excerpt":null,"covers":["https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001649899-2112300228.png","https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001659057-1064615866.png","https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png","https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png","https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001732459-124817082.png","https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001741065-1446311536.png","https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185441654-685236737.png","https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185658793-1430580007.png","https://images2018.cnblogs.com/blog/1132884/201807/1132884-20180725134009278-1247444646.png"],"content":"<h2 id=\"1-mysqlmariadb\"><a class=\"markdownIt-Anchor\" href=\"#1-mysqlmariadb\"></a> 1 MYSQL(mariadb)</h2>\n<p>MariaDB数据库管理系统是MySQL的一个分支**，主要由开源社区在维护，采用GPL授权许可。</p>\n<p>开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将<strong>MySQL闭源</strong>的潜在风险，因此社区<strong>采用分支的方式来避开这个风险</strong>。</p>\n<p>MariaDB的目的是<strong>完全兼容MySQL</strong>，包括API和命令行，使之能轻松成为MySQL的代替品。</p>\n<h3 id=\"11-yum-安装-mariadb\"><a class=\"markdownIt-Anchor\" href=\"#11-yum-安装-mariadb\"></a> 1.1 yum 安装 mariadb</h3>\n<h4 id=\"1-添加-mariadb-yum-仓库\"><a class=\"markdownIt-Anchor\" href=\"#1-添加-mariadb-yum-仓库\"></a> 1. 添加 MariaDB yum 仓库</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.首先在 RHEL/CentOS 和 Fedora 操作系统中添加 MariaDB 的 YUM 配置文件 MariaDB.repo 文件。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 编辑创建mariadb.repo仓库文件</span></span><br><span class=\"line\">vim /etc/yum.repos.d/MariaDB.repo</span><br></pre></td></tr></table></figure>\n<h2 id=\"-code1-\"><a class=\"markdownIt-Anchor\" href=\"#-code1-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.添加repo仓库配置</span><br><span class=\"line\"></span><br><span class=\"line\">[mariadb]</span><br><span class=\"line\">name = MariaDB</span><br><span class=\"line\">baseurl = http://yum.mariadb.org/10.1/centos7-amd64</span><br><span class=\"line\">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class=\"line\">gpgcheck=1</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"2-在centos-7-中安装-mariadb\"><a class=\"markdownIt-Anchor\" href=\"#2-在centos-7-中安装-mariadb\"></a> 2. 在CentOS 7 中安装 MariaDB</h4>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 当 MariaDB 仓库地址添加好后，通过下面一行命令 MariaDB。</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install MariaDB-server MariaDB-client -y</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"3-启动mariadb相关命令\"><a class=\"markdownIt-Anchor\" href=\"#3-启动mariadb相关命令\"></a> 3. 启动mariadb相关命令</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> mariadb数据库的相关命令是：</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mariadb  #启动MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop mariadb  #停止MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart mariadb  #重启MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable mariadb  #设置开机启动</span><br></pre></td></tr></table></figure>\n<p>启动后正常使用mysql</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mariadb</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-初始化mysql\"><a class=\"markdownIt-Anchor\" href=\"#12-初始化mysql\"></a> 1.2 初始化mysql</h3>\n<p>MariaDB 安装完毕并成功启动后请不要立即使用。为了确保数据 库的安全性和正常运转，需要先对数据库程序进行初始化操作。这个初始化操作涉及下面 5 个 步骤。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 设置 root 管理员在数据库中的密码值(注意，该密码并非 root 管理员在系统中的密 码，这里的密码值默认应该为空，可直接按回车键)。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> 设置 root 管理员在数据库中的专有密码。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 随后删除匿名账户，并使用 root 管理员从远程登录数据库，以确保数据库上运行的业</span><br><span class=\"line\">务的安全性。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> 删除默认的测试数据库，取消测试数据库的一系列访问权限。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5.</span> 刷新授权列表，让初始化的设定立即生效。</span><br></pre></td></tr></table></figure>\n<p>确保mariadb服务器启动后，执行命令初始化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<p><strong>初始化mysql</strong></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001649899-2112300228.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001659057-1064615866.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001732459-124817082.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001741065-1446311536.png\" alt=\"img\" /></p>\n<h3 id=\"13-mysql基本命令\"><a class=\"markdownIt-Anchor\" href=\"#13-mysql基本命令\"></a> 1.3 mysql基本命令</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改mysql密码</span></span><br><span class=\"line\">MariaDB [(none)]&gt; set password = PASSWORD(&#x27;redhat123&#x27;);</span><br></pre></td></tr></table></figure>\n<p>生产环境里不会死磕root用户，<strong>为了数据库的安全</strong>以及和其他用户<strong>协同管理数据库</strong>，就需要<strong>创建其他数据库账户，然后分配权限</strong>，满足工作需求。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; create user yuchao@&#x27;127.0.0.1&#x27; identified by &#x27;redhat123&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; select host,user,password from user where user=&#x27;yuchao&#x27;;</span><br></pre></td></tr></table></figure>\n<p>切换普通用户yuchao，查看数据库信息，发现无法看到完整的数据库列表</p>\n<h2 id=\"-code9-\"><a class=\"markdownIt-Anchor\" href=\"#-code9-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uyuchao -p -h 127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; show databases;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"数据库权限设置\"><a class=\"markdownIt-Anchor\" href=\"#数据库权限设置\"></a> 数据库权限设置</h4>\n<p>mysql使用grant命令对账户进行授权，grant命令常见格式如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant 权限 on 数据库.表名 to 账户@主机名         # 对特定数据库中的特定表授权</span><br><span class=\"line\">grant 权限 on 数据库.* to 账户@主机名           #　对特定数据库中的所有表给与授权</span><br><span class=\"line\">grant 权限1,权限2,权限3 on *.* to 账户@主机名    # 对所有库中的所有表给与多个授权</span><br><span class=\"line\">grant all privileges on *.* to 账户@主机名   　# 对所有库和所有表授权所有权限</span><br></pre></td></tr></table></figure>\n<p>退出数据库，使用root登录，开始权限设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; grant all privileges on *.* to yuchao@127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; show grants for yuchao@127.0.0.1;</span><br></pre></td></tr></table></figure>\n<p>移除权限</p>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; revoke all privileges on *.* from yuchao@127.0.0.1;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"配置mysql\"><a class=\"markdownIt-Anchor\" href=\"#配置mysql\"></a> 配置mysql</h4>\n<p>1.中文编码设置，编辑mysql配置文件/etc/my.cnf，下入以下内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_general_ci</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br></pre></td></tr></table></figure>\n<p>2.授权配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">远程连接设置哦设置所有库，所有表的所有权限，赋值权限给所有ip地址的root用户</span><br><span class=\"line\">\tmysql &gt; grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;password&#x27;;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">创建用户</span></span><br><span class=\"line\">\tmysql &gt; create user &#x27;username&#x27;@&#x27;%&#x27; identified by &#x27;password&#x27;;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">刷新权限</span></span><br><span class=\"line\">\tflush privileges;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-数据库备份与恢复\"><a class=\"markdownIt-Anchor\" href=\"#2-数据库备份与恢复\"></a> 2 数据库备份与恢复</h2>\n<p>mysqldump命令用于备份数据库数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysqldump -u root -p --all-databases &gt; /tmp/db.dump</span><br></pre></td></tr></table></figure>\n<p>2.导出db1、db2两个数据库的所有数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -proot --databases db1 db2 &gt;/tmp/user.sql</span><br></pre></td></tr></table></figure>\n<p>进入mariadb数据库，删除一个db</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; drop database s11;</span><br></pre></td></tr></table></figure>\n<p>进行数据恢复，吧刚才重定向备份的数据库文件导入到mysql中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p &lt; /tmp/db.dump</span><br></pre></td></tr></table></figure>\n<h3 id=\"21-mysql主从复制\"><a class=\"markdownIt-Anchor\" href=\"#21-mysql主从复制\"></a> 2.1 MYSQL主从复制</h3>\n<p>MySQL数据库的主从复制方案，是其自带的功能，并且主从复制并不是复制磁盘上的数据库文件，而是通过binlog日志复制到需要同步的从服务器上。</p>\n<p>MySQL数据库支持单向、双向、链式级联，等不同业务场景的复制。在复制的过程中，一台服务器充当主服务器（Master），接收来自用户的内容更新，而一个或多个其他的服务器充当从服务器（slave），接收来自Master上binlog文件的日志内容，解析出SQL，重新更新到Slave，使得主从服务器数据达到一致。</p>\n<p>主从复制的逻辑有以下几种</p>\n<p>一主一从，单向主从同步模式，只能在Master端写入数据</p>\n<p>一主多从</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185441654-685236737.png\" alt=\"img\" /></p>\n<p>双主主复制逻辑架构，此架构可以在Master1或Master2进行数据写入，或者两端同事写入（特殊设置）</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185658793-1430580007.png\" alt=\"img\" /></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在生产环境中，MySQL主从复制都是异步的复制方式，即不是严格的实时复制，但是给用户的体验都是实时的。MySQL主从复制集群功能使得MySQL数据库支持大规模高并发读写成为可能，且有效的保护了服务器宕机的数据备份。</span><br></pre></td></tr></table></figure>\n<p>应用场景</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用复制功能当Master服务器出现问题时，我们可以人工的切换到从服务器继续提供服务，此时服务器的数据和宕机时的数据几乎完全一致。复制功能也可用作数据备份，但是如果人为的执行drop,delete等语句删除，那么从库的备份功能也就失效了.</span><br></pre></td></tr></table></figure>\n<p><strong>主从机制实现原理</strong></p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201807/1132884-20180725134009278-1247444646.png\" alt=\"img\" /></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1) master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）； </span><br><span class=\"line\">(2) slave将master的binary log events拷贝到它的中继日志(relay log)； </span><br><span class=\"line\">(3) slave重做中继日志中的事件，将改变反映它自己的数据。</span><br></pre></td></tr></table></figure>\n<h3 id=\"22-master主库配置\"><a class=\"markdownIt-Anchor\" href=\"#22-master主库配置\"></a> 2.2 master主库配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看数据库状态</span></span><br><span class=\"line\">\tsystemctl status mariadb</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 停止mariadb</span></span><br><span class=\"line\">\tsystemctl stop mariadb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改配置文件</span></span><br><span class=\"line\">\tvim /etc/my.cnf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改内容</span></span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"> 解释：server-id服务的唯一标识（主从之间都必须不同）；log-bin启动二进制日志名称为mysql-bin</span> </span><br><span class=\"line\">\t[mysqld]</span><br><span class=\"line\">\tserver-id=1</span><br><span class=\"line\">\tlog-bin=mysql-bin</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重启mariadb</span></span><br><span class=\"line\">\tsystemctl start mariadb</span><br></pre></td></tr></table></figure>\n<p></p>\n<h3 id=\"23-master主库添加从库账号\"><a class=\"markdownIt-Anchor\" href=\"#23-master主库添加从库账号\"></a> 2.3 master主库添加从库账号</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.新建用于主从同步的用户chaoge,允许登录的从库是&#x27;192.168.178.130&#x27;</span><br><span class=\"line\">\tcreate user &#x27;chaoge&#x27;@&#x27;192.168.178.130&#x27; identified by &#x27;redhat&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">2.# 题外话：如果提示密码太简单不复合策略加在前面加这句</span><br><span class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\"> <span class=\"built_in\">set</span> global validate_password_policy=0;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3.给从库账号授权,说明给chaoge从库复制的权限，在192.168.178.130机器上复制\tgrant replication slave on *.* to &#x27;chaoge&#x27;@&#x27;192.168.178.130&#x27;;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">检查 主库创建的复制账号</span></span><br><span class=\"line\">\tselect user,host from mysql.user;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">检查授权账号的权限</span></span><br><span class=\"line\">\tshow grants for chaoge@&#x27;192.168.178.130&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">实现对主数据库锁表只读，防止数据写入，数据复制失败</span><br><span class=\"line\">    flush table with read lock;</span><br><span class=\"line\"></span><br><span class=\"line\">4.检查主库的状态</span><br><span class=\"line\">    MariaDB [(none)]&gt; show master status</span><br><span class=\"line\">    -&gt; ;</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    | File | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    | mysql-bin.000001 | 575 | | |</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> File是二进制日志文件名，Position 是日志开始的位置。后面从库会用到 后面从库会用到 后面从库会用到！！！！！！</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.锁表后，一定要单独再打开一个SSH窗口，导出数据库的所有数据，</span><br><span class=\"line\">\t[root@oldboy_python ~ 19:32:45]# mysqldump -uroot -p --all-databases &gt; /data/all.sql </span><br><span class=\"line\"></span><br><span class=\"line\">6.确保数据导出后，没有数据插入，完毕再查看主库状态</span><br><span class=\"line\">\tshow master status;</span><br><span class=\"line\"></span><br><span class=\"line\">7.导出数据完毕后，解锁主库，恢复可写；</span><br><span class=\"line\">\tunlock tables;</span><br><span class=\"line\"></span><br><span class=\"line\">8.将备份导出的数据scp至Slave数据库</span><br><span class=\"line\">\tscp /data/all.sql root@192.168.178.130:/data/</span><br></pre></td></tr></table></figure>\n<h3 id=\"24-slave从库配置\"><a class=\"markdownIt-Anchor\" href=\"#24-slave从库配置\"></a> 2.4 slave从库配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.设置server-id值并关闭binlog功能参数</span><br><span class=\"line\">\t数据库的server-id在主从复制体系内是唯一的，Slave的server-id要与主库和其他从库不同，并且注释掉Slave的binlog参数。</span><br><span class=\"line\"></span><br><span class=\"line\">2.因此修改Slave的/etc/my.cnf，写入</span><br><span class=\"line\">    [mysqld]</span><br><span class=\"line\">    server-id=3</span><br><span class=\"line\"></span><br><span class=\"line\">3.重启数据库</span><br><span class=\"line\">\tsystemctl restart mariadb</span><br><span class=\"line\"></span><br><span class=\"line\">4.检查Slava从数据库的各项参数</span><br><span class=\"line\">\tshow variables like &#x27;log_bin&#x27;;</span><br><span class=\"line\">\tshow variables like &#x27;server_id&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">5.恢复主库Master的数据导入到Slave库导入数据（注意sql文件的路径）</span><br><span class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\"><span class=\"built_in\">source</span> /data/all.sql;</span></span><br><span class=\"line\"></span><br><span class=\"line\">方法二：</span><br><span class=\"line\">    # mysql -uroot -p  &lt; abc.sql </span><br><span class=\"line\"></span><br><span class=\"line\">6.配置复制的参数，Slave从库连接Master主库的配置</span><br><span class=\"line\">    mysql &gt; change master to master_host=&#x27;192.168.178.129&#x27;,</span><br><span class=\"line\">    master_user=&#x27;chaoge&#x27;,</span><br><span class=\"line\">    master_password=&#x27;redhat&#x27;,</span><br><span class=\"line\">    master_log_file=&#x27;mysql-bin.000001&#x27;,</span><br><span class=\"line\">    master_log_pos=575;</span><br><span class=\"line\"></span><br><span class=\"line\">7.启动从库的同步开关，测试主从复制的情况</span><br><span class=\"line\">    start slave;</span><br><span class=\"line\"></span><br><span class=\"line\">8.查看复制状态</span><br><span class=\"line\">    show slave status\\G;</span><br></pre></td></tr></table></figure>\n<p>检查主从复制是否成功的关键在于</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; show slave status\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.119.10</span><br><span class=\"line\">                  Master_User: chaoge</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 1039</span><br><span class=\"line\">               Relay_Log_File: slave-relay-bin.000002</span><br><span class=\"line\">                Relay_Log_Pos: 537</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n<p>tip：</p>\n<p>注意此处还未配置从库的只读模式，只需在<strong>slave</strong>服务器上配置**/etc/my.cnf**，加上以下配置，并且在slave上创建普通用户，使用普通用户主从同步即可达到只读的效果</p>\n<p>如果用<strong>root</strong>用户，无法达到<strong>readonly</strong>，这是一个坑</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_general_ci</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">server-id=3</span><br><span class=\"line\">read-only=true</span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"1-mysqlmariadb\"><a class=\"markdownIt-Anchor\" href=\"#1-mysqlmariadb\"></a> 1 MYSQL(mariadb)</h2>\n<p>MariaDB数据库管理系统是MySQL的一个分支**，主要由开源社区在维护，采用GPL授权许可。</p>\n<p>开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将<strong>MySQL闭源</strong>的潜在风险，因此社区<strong>采用分支的方式来避开这个风险</strong>。</p>\n<p>MariaDB的目的是<strong>完全兼容MySQL</strong>，包括API和命令行，使之能轻松成为MySQL的代替品。</p>\n<h3 id=\"11-yum-安装-mariadb\"><a class=\"markdownIt-Anchor\" href=\"#11-yum-安装-mariadb\"></a> 1.1 yum 安装 mariadb</h3>\n<h4 id=\"1-添加-mariadb-yum-仓库\"><a class=\"markdownIt-Anchor\" href=\"#1-添加-mariadb-yum-仓库\"></a> 1. 添加 MariaDB yum 仓库</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.首先在 RHEL/CentOS 和 Fedora 操作系统中添加 MariaDB 的 YUM 配置文件 MariaDB.repo 文件。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 编辑创建mariadb.repo仓库文件</span></span><br><span class=\"line\">vim /etc/yum.repos.d/MariaDB.repo</span><br></pre></td></tr></table></figure>\n<h2 id=\"-code1-\"><a class=\"markdownIt-Anchor\" href=\"#-code1-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.添加repo仓库配置</span><br><span class=\"line\"></span><br><span class=\"line\">[mariadb]</span><br><span class=\"line\">name = MariaDB</span><br><span class=\"line\">baseurl = http://yum.mariadb.org/10.1/centos7-amd64</span><br><span class=\"line\">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class=\"line\">gpgcheck=1</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"2-在centos-7-中安装-mariadb\"><a class=\"markdownIt-Anchor\" href=\"#2-在centos-7-中安装-mariadb\"></a> 2. 在CentOS 7 中安装 MariaDB</h4>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 当 MariaDB 仓库地址添加好后，通过下面一行命令 MariaDB。</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install MariaDB-server MariaDB-client -y</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"3-启动mariadb相关命令\"><a class=\"markdownIt-Anchor\" href=\"#3-启动mariadb相关命令\"></a> 3. 启动mariadb相关命令</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> mariadb数据库的相关命令是：</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mariadb  #启动MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop mariadb  #停止MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart mariadb  #重启MariaDB</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable mariadb  #设置开机启动</span><br></pre></td></tr></table></figure>\n<p>启动后正常使用mysql</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mariadb</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-初始化mysql\"><a class=\"markdownIt-Anchor\" href=\"#12-初始化mysql\"></a> 1.2 初始化mysql</h3>\n<p>MariaDB 安装完毕并成功启动后请不要立即使用。为了确保数据 库的安全性和正常运转，需要先对数据库程序进行初始化操作。这个初始化操作涉及下面 5 个 步骤。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 设置 root 管理员在数据库中的密码值(注意，该密码并非 root 管理员在系统中的密 码，这里的密码值默认应该为空，可直接按回车键)。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> 设置 root 管理员在数据库中的专有密码。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 随后删除匿名账户，并使用 root 管理员从远程登录数据库，以确保数据库上运行的业</span><br><span class=\"line\">务的安全性。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> 删除默认的测试数据库，取消测试数据库的一系列访问权限。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5.</span> 刷新授权列表，让初始化的设定立即生效。</span><br></pre></td></tr></table></figure>\n<p>确保mariadb服务器启动后，执行命令初始化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<p><strong>初始化mysql</strong></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001649899-2112300228.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001659057-1064615866.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001716166-629537215.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001732459-124817082.png\" alt=\"img\" /></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1132884/201810/1132884-20181013001741065-1446311536.png\" alt=\"img\" /></p>\n<h3 id=\"13-mysql基本命令\"><a class=\"markdownIt-Anchor\" href=\"#13-mysql基本命令\"></a> 1.3 mysql基本命令</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改mysql密码</span></span><br><span class=\"line\">MariaDB [(none)]&gt; set password = PASSWORD(&#x27;redhat123&#x27;);</span><br></pre></td></tr></table></figure>\n<p>生产环境里不会死磕root用户，<strong>为了数据库的安全</strong>以及和其他用户<strong>协同管理数据库</strong>，就需要<strong>创建其他数据库账户，然后分配权限</strong>，满足工作需求。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; create user yuchao@&#x27;127.0.0.1&#x27; identified by &#x27;redhat123&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; select host,user,password from user where user=&#x27;yuchao&#x27;;</span><br></pre></td></tr></table></figure>\n<p>切换普通用户yuchao，查看数据库信息，发现无法看到完整的数据库列表</p>\n<h2 id=\"-code9-\"><a class=\"markdownIt-Anchor\" href=\"#-code9-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uyuchao -p -h 127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; show databases;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"数据库权限设置\"><a class=\"markdownIt-Anchor\" href=\"#数据库权限设置\"></a> 数据库权限设置</h4>\n<p>mysql使用grant命令对账户进行授权，grant命令常见格式如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant 权限 on 数据库.表名 to 账户@主机名         # 对特定数据库中的特定表授权</span><br><span class=\"line\">grant 权限 on 数据库.* to 账户@主机名           #　对特定数据库中的所有表给与授权</span><br><span class=\"line\">grant 权限1,权限2,权限3 on *.* to 账户@主机名    # 对所有库中的所有表给与多个授权</span><br><span class=\"line\">grant all privileges on *.* to 账户@主机名   　# 对所有库和所有表授权所有权限</span><br></pre></td></tr></table></figure>\n<p>退出数据库，使用root登录，开始权限设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; grant all privileges on *.* to yuchao@127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; show grants for yuchao@127.0.0.1;</span><br></pre></td></tr></table></figure>\n<p>移除权限</p>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; revoke all privileges on *.* from yuchao@127.0.0.1;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"配置mysql\"><a class=\"markdownIt-Anchor\" href=\"#配置mysql\"></a> 配置mysql</h4>\n<p>1.中文编码设置，编辑mysql配置文件/etc/my.cnf，下入以下内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_general_ci</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br></pre></td></tr></table></figure>\n<p>2.授权配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">远程连接设置哦设置所有库，所有表的所有权限，赋值权限给所有ip地址的root用户</span><br><span class=\"line\">\tmysql &gt; grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;password&#x27;;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">创建用户</span></span><br><span class=\"line\">\tmysql &gt; create user &#x27;username&#x27;@&#x27;%&#x27; identified by &#x27;password&#x27;;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">刷新权限</span></span><br><span class=\"line\">\tflush privileges;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-数据库备份与恢复\"><a class=\"markdownIt-Anchor\" href=\"#2-数据库备份与恢复\"></a> 2 数据库备份与恢复</h2>\n<p>mysqldump命令用于备份数据库数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysqldump -u root -p --all-databases &gt; /tmp/db.dump</span><br></pre></td></tr></table></figure>\n<p>2.导出db1、db2两个数据库的所有数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -proot --databases db1 db2 &gt;/tmp/user.sql</span><br></pre></td></tr></table></figure>\n<p>进入mariadb数据库，删除一个db</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; drop database s11;</span><br></pre></td></tr></table></figure>\n<p>进行数据恢复，吧刚才重定向备份的数据库文件导入到mysql中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master ~]# mysql -uroot -p &lt; /tmp/db.dump</span><br></pre></td></tr></table></figure>\n<h3 id=\"21-mysql主从复制\"><a class=\"markdownIt-Anchor\" href=\"#21-mysql主从复制\"></a> 2.1 MYSQL主从复制</h3>\n<p>MySQL数据库的主从复制方案，是其自带的功能，并且主从复制并不是复制磁盘上的数据库文件，而是通过binlog日志复制到需要同步的从服务器上。</p>\n<p>MySQL数据库支持单向、双向、链式级联，等不同业务场景的复制。在复制的过程中，一台服务器充当主服务器（Master），接收来自用户的内容更新，而一个或多个其他的服务器充当从服务器（slave），接收来自Master上binlog文件的日志内容，解析出SQL，重新更新到Slave，使得主从服务器数据达到一致。</p>\n<p>主从复制的逻辑有以下几种</p>\n<p>一主一从，单向主从同步模式，只能在Master端写入数据</p>\n<p>一主多从</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185441654-685236737.png\" alt=\"img\" /></p>\n<p>双主主复制逻辑架构，此架构可以在Master1或Master2进行数据写入，或者两端同事写入（特殊设置）</p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201808/1132884-20180827185658793-1430580007.png\" alt=\"img\" /></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在生产环境中，MySQL主从复制都是异步的复制方式，即不是严格的实时复制，但是给用户的体验都是实时的。MySQL主从复制集群功能使得MySQL数据库支持大规模高并发读写成为可能，且有效的保护了服务器宕机的数据备份。</span><br></pre></td></tr></table></figure>\n<p>应用场景</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用复制功能当Master服务器出现问题时，我们可以人工的切换到从服务器继续提供服务，此时服务器的数据和宕机时的数据几乎完全一致。复制功能也可用作数据备份，但是如果人为的执行drop,delete等语句删除，那么从库的备份功能也就失效了.</span><br></pre></td></tr></table></figure>\n<p><strong>主从机制实现原理</strong></p>\n<p><img src=\"https://images2018.cnblogs.com/blog/1132884/201807/1132884-20180725134009278-1247444646.png\" alt=\"img\" /></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1) master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）； </span><br><span class=\"line\">(2) slave将master的binary log events拷贝到它的中继日志(relay log)； </span><br><span class=\"line\">(3) slave重做中继日志中的事件，将改变反映它自己的数据。</span><br></pre></td></tr></table></figure>\n<h3 id=\"22-master主库配置\"><a class=\"markdownIt-Anchor\" href=\"#22-master主库配置\"></a> 2.2 master主库配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看数据库状态</span></span><br><span class=\"line\">\tsystemctl status mariadb</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 停止mariadb</span></span><br><span class=\"line\">\tsystemctl stop mariadb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改配置文件</span></span><br><span class=\"line\">\tvim /etc/my.cnf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改内容</span></span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"> 解释：server-id服务的唯一标识（主从之间都必须不同）；log-bin启动二进制日志名称为mysql-bin</span> </span><br><span class=\"line\">\t[mysqld]</span><br><span class=\"line\">\tserver-id=1</span><br><span class=\"line\">\tlog-bin=mysql-bin</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重启mariadb</span></span><br><span class=\"line\">\tsystemctl start mariadb</span><br></pre></td></tr></table></figure>\n<p></p>\n<h3 id=\"23-master主库添加从库账号\"><a class=\"markdownIt-Anchor\" href=\"#23-master主库添加从库账号\"></a> 2.3 master主库添加从库账号</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.新建用于主从同步的用户chaoge,允许登录的从库是&#x27;192.168.178.130&#x27;</span><br><span class=\"line\">\tcreate user &#x27;chaoge&#x27;@&#x27;192.168.178.130&#x27; identified by &#x27;redhat&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">2.# 题外话：如果提示密码太简单不复合策略加在前面加这句</span><br><span class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\"> <span class=\"built_in\">set</span> global validate_password_policy=0;</span></span><br><span class=\"line\"></span><br><span class=\"line\">3.给从库账号授权,说明给chaoge从库复制的权限，在192.168.178.130机器上复制\tgrant replication slave on *.* to &#x27;chaoge&#x27;@&#x27;192.168.178.130&#x27;;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">检查 主库创建的复制账号</span></span><br><span class=\"line\">\tselect user,host from mysql.user;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">检查授权账号的权限</span></span><br><span class=\"line\">\tshow grants for chaoge@&#x27;192.168.178.130&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">实现对主数据库锁表只读，防止数据写入，数据复制失败</span><br><span class=\"line\">    flush table with read lock;</span><br><span class=\"line\"></span><br><span class=\"line\">4.检查主库的状态</span><br><span class=\"line\">    MariaDB [(none)]&gt; show master status</span><br><span class=\"line\">    -&gt; ;</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    | File | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    | mysql-bin.000001 | 575 | | |</span><br><span class=\"line\">    +------------------+----------+--------------+------------------+</span><br><span class=\"line\">    1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> File是二进制日志文件名，Position 是日志开始的位置。后面从库会用到 后面从库会用到 后面从库会用到！！！！！！</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.锁表后，一定要单独再打开一个SSH窗口，导出数据库的所有数据，</span><br><span class=\"line\">\t[root@oldboy_python ~ 19:32:45]# mysqldump -uroot -p --all-databases &gt; /data/all.sql </span><br><span class=\"line\"></span><br><span class=\"line\">6.确保数据导出后，没有数据插入，完毕再查看主库状态</span><br><span class=\"line\">\tshow master status;</span><br><span class=\"line\"></span><br><span class=\"line\">7.导出数据完毕后，解锁主库，恢复可写；</span><br><span class=\"line\">\tunlock tables;</span><br><span class=\"line\"></span><br><span class=\"line\">8.将备份导出的数据scp至Slave数据库</span><br><span class=\"line\">\tscp /data/all.sql root@192.168.178.130:/data/</span><br></pre></td></tr></table></figure>\n<h3 id=\"24-slave从库配置\"><a class=\"markdownIt-Anchor\" href=\"#24-slave从库配置\"></a> 2.4 slave从库配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.设置server-id值并关闭binlog功能参数</span><br><span class=\"line\">\t数据库的server-id在主从复制体系内是唯一的，Slave的server-id要与主库和其他从库不同，并且注释掉Slave的binlog参数。</span><br><span class=\"line\"></span><br><span class=\"line\">2.因此修改Slave的/etc/my.cnf，写入</span><br><span class=\"line\">    [mysqld]</span><br><span class=\"line\">    server-id=3</span><br><span class=\"line\"></span><br><span class=\"line\">3.重启数据库</span><br><span class=\"line\">\tsystemctl restart mariadb</span><br><span class=\"line\"></span><br><span class=\"line\">4.检查Slava从数据库的各项参数</span><br><span class=\"line\">\tshow variables like &#x27;log_bin&#x27;;</span><br><span class=\"line\">\tshow variables like &#x27;server_id&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">5.恢复主库Master的数据导入到Slave库导入数据（注意sql文件的路径）</span><br><span class=\"line\"><span class=\"meta\">\tmysql&gt;</span><span class=\"bash\"><span class=\"built_in\">source</span> /data/all.sql;</span></span><br><span class=\"line\"></span><br><span class=\"line\">方法二：</span><br><span class=\"line\">    # mysql -uroot -p  &lt; abc.sql </span><br><span class=\"line\"></span><br><span class=\"line\">6.配置复制的参数，Slave从库连接Master主库的配置</span><br><span class=\"line\">    mysql &gt; change master to master_host=&#x27;192.168.178.129&#x27;,</span><br><span class=\"line\">    master_user=&#x27;chaoge&#x27;,</span><br><span class=\"line\">    master_password=&#x27;redhat&#x27;,</span><br><span class=\"line\">    master_log_file=&#x27;mysql-bin.000001&#x27;,</span><br><span class=\"line\">    master_log_pos=575;</span><br><span class=\"line\"></span><br><span class=\"line\">7.启动从库的同步开关，测试主从复制的情况</span><br><span class=\"line\">    start slave;</span><br><span class=\"line\"></span><br><span class=\"line\">8.查看复制状态</span><br><span class=\"line\">    show slave status\\G;</span><br></pre></td></tr></table></figure>\n<p>检查主从复制是否成功的关键在于</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; show slave status\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.119.10</span><br><span class=\"line\">                  Master_User: chaoge</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 1039</span><br><span class=\"line\">               Relay_Log_File: slave-relay-bin.000002</span><br><span class=\"line\">                Relay_Log_Pos: 537</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n<p>tip：</p>\n<p>注意此处还未配置从库的只读模式，只需在<strong>slave</strong>服务器上配置**/etc/my.cnf**，加上以下配置，并且在slave上创建普通用户，使用普通用户主从同步即可达到只读的效果</p>\n<p>如果用<strong>root</strong>用户，无法达到<strong>readonly</strong>，这是一个坑</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_general_ci</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">server-id=3</span><br><span class=\"line\">read-only=true</span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"linux","path":"api/categories/linux.json"}],"tags":[{"name":"linux","path":"api/tags/linux.json"},{"name":"Mysql","path":"api/tags/Mysql.json"}]}
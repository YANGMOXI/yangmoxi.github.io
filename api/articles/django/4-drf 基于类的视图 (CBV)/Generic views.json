{"title":"drf视图类 - GenericAPIView[通用视图类]","slug":"django/4-drf 基于类的视图 (CBV)/Generic views","date":"2021-01-18T10:34:55.632Z","updated":"2021-01-21T15:25:48.846Z","comments":true,"path":"api/articles/django/4-drf 基于类的视图 (CBV)/Generic views.json","excerpt":null,"covers":null,"content":"<p>简介</p>\n<h2 id=\"-code0-\"><a class=\"markdownIt-Anchor\" href=\"#-code0-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;from rest_framework.generics import GenericAPIView</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">继承自<span class=\"string\">&quot;APIVIew&quot;</span>，</span><br><span class=\"line\">    - 增加了：</span><br><span class=\"line\">        <span class=\"number\">1</span> 操作序列化器</span><br><span class=\"line\">        <span class=\"number\">2</span> 数据库查询的方法，</span><br><span class=\"line\"></span><br><span class=\"line\">    - 作用：</span><br><span class=\"line\">        为下面Mixin扩展类的执行提供方法支持。使用时，可搭配一个或多个Mixin扩展类。</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"序列化器使用的属性与方法\"><a class=\"markdownIt-Anchor\" href=\"#序列化器使用的属性与方法\"></a> 序列化器使用的属性与方法</h4>\n<ul>\n<li>\n<p>属性</p>\n<ul>\n<li><strong>serializer_class</strong> - 知名视图使用的序列化器</li>\n</ul>\n</li>\n<li>\n<p>方法</p>\n</li>\n<li>\n<p><strong>get_serializer_class(self)</strong></p>\n<ul>\n<li>返回应用于序列化的类。默认为返回 serializer_class 属性的值。</li>\n<li>适用场景：<strong>一个视图类中调用多个序列化器</strong>\n<ul>\n<li>根据不同条件 - 执行不同的序列化器对象</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_serializer_class</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> self.request.user.is_staff:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FullAccountSerializer</span><br><span class=\"line\">    <span class=\"keyword\">return</span> BasicAccountSerializer</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>get_serializer(self, args, *kwargs)</strong></p>\n<ul>\n<li>返回序列化器对象，主要用来提供给 Mixin 扩展类使用，如果我们在视图中想要获取序列化器对象，也可以直接调用此方法。</li>\n<li><strong>该方法在提供序列化器对象的时候，会向序列化器对象的 context 属性补充三个数据：request、format、view</strong>，这三个数据对象可以在定义序列化器时使用。\n<ul>\n<li><strong>request</strong> - 当前视图的请求对象</li>\n<li><strong>view</strong> - 当前视图的类视图对象</li>\n<li>format - 当前请求期望返回的数据格式</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h4 id=\"数据库查询的属性与方法\"><a class=\"markdownIt-Anchor\" href=\"#数据库查询的属性与方法\"></a> 数据库查询的属性与方法</h4>\n<p>属性</p>\n<ul>\n<li>\n<p><strong>queryset</strong>: 指明使用的数据查询集</p>\n</li>\n<li>\n<p>lookup_field</p>\n</li>\n<li>\n<p>lookup_url_kwarg</p>\n</li>\n<li>\n<p>方法</p>\n<ul>\n<li>\n<p><strong>get_queryset(self)</strong></p>\n<ul>\n<li>返回<strong>视图使用的查询集</strong>，主要用来提供给 Mixin 扩展类使用，</li>\n<li>是列表视图 list 与详情视图 detail 获取数据的基础，</li>\n<li>默认返回 queryset 属性，可以重写，例如：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">    user = self.request.user</span><br><span class=\"line\">    <span class=\"keyword\">return</span> user.accounts.<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>get_object(self)</strong></p>\n<ul>\n<li>返回<strong>详细视图的模型类数据对象</strong>，主要用来提供给 Mixin 扩展类使用。</li>\n<li>在视图中可以调用该方法获取详情信息的模型类对象。\n<ul>\n<li>若详情访问的模型类对象不存在，会返回 404。</li>\n</ul>\n</li>\n<li>该方法会默认使用 APIView 提供的<code>check_object_permissions</code>方法检查当前对象是否有权限被访问。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># url(r&#x27;^books/(?P&lt;pk&gt;\\d+)/$&#x27;, views.BookDetailView.as_view()),</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookDetailView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, pk</span>):</span></span><br><span class=\"line\">        book = <span class=\"string\">&quot;self.get_object()&quot;</span> <span class=\"comment\"># get_object()方法根据pk参数查找queryset中的数据对象</span></span><br><span class=\"line\">        serializer = self.get_serializer(book)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h4 id=\"其他可设置的属性\"><a class=\"markdownIt-Anchor\" href=\"#其他可设置的属性\"></a> 其他可设置的属性</h4>\n<ul>\n<li>\n<p><strong>pagination_class</strong> - 指明分页控制类</p>\n</li>\n<li>\n<p><strong>filter_backends</strong> - 指明过滤控制后端</p>\n</li>\n</ul>\n<hr />\n<p>代码：</p>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> GenericAPIView</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"><span class=\"keyword\">from</span> .serializers <span class=\"keyword\">import</span> StudentModelSerializer, StudentModel2Serializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.response <span class=\"keyword\">import</span> Response</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentsGenericAPIView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()           <span class=\"comment\"># 本次视图类中要操作的数据[必填]</span></span><br><span class=\"line\">    serializer_class = StudentModelSerializer  <span class=\"comment\"># 本次视图类中要调用的默认序列化器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取所有学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_queryset(), many=True)&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        data = request.data</span><br><span class=\"line\">        serializer = self.get_serializer(data=data)</span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        instance = serializer.save()</span><br><span class=\"line\">        serializer = self.get_serializer(instance=instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentGenericAPIView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_serializer_class</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;重写获取序列化器类的方法&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.request.method == <span class=\"string\">&quot;GET&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> StudentModel2Serializer</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 在使用GenericAPIView视图获取或操作单个数据时,视图方法中的代表主键的参数最好是pk</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_object())&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">put</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        data = request.data</span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_object(), data=data)&quot;</span></span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        serializer.save()</span><br><span class=\"line\">        serializer = self.get_serializer(instance=self.get_object())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>序列化器类</li>\n</ul>\n<h2 id=\"-code5-\"><a class=\"markdownIt-Anchor\" href=\"#-code5-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework <span class=\"keyword\">import</span> serializers</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelSerializer</span>(<span class=\"params\">serializers.ModelSerializer</span>):</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model= Student</span><br><span class=\"line\">        fields = <span class=\"string\">&quot;__all__&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModel2Serializer</span>(<span class=\"params\">serializers.ModelSerializer</span>):</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model= Student</span><br><span class=\"line\">        fields = (<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;class_null&quot;</span>)</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"mixins-5-个视图扩展类\"><a class=\"markdownIt-Anchor\" href=\"#mixins-5-个视图扩展类\"></a> Mixins - 5 个视图扩展类</h3>\n<p>（结合 GenericAPIView 使用）</p>\n<h2 id=\"-code6-\"><a class=\"markdownIt-Anchor\" href=\"#-code6-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">由于使用GenericAPIView时，多了很多重复方法，因此在此基础上封装 将增删改查扩展了类中</span><br><span class=\"line\"></span><br><span class=\"line\">可与GenericAPIView配合使用</span><br><span class=\"line\"></span><br><span class=\"line\">    ListModelMixin      获取多条（过滤和分页）</span><br><span class=\"line\">    CreateModelMixin    创建</span><br><span class=\"line\">    RetrieveModelMixin  获取一条</span><br><span class=\"line\">    UpdateModelMixin    更新</span><br><span class=\"line\">    DestroyModelMixin   删除</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"1-listmodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#1-listmodelmixin\"></a> 1) ListModelMixin</h4>\n<p>列表视图扩展类,提供 <code>list(request, *args, **kwargs)</code> 方法，快速实现列表视图</p>\n<ul>\n<li>有数据时，则返回 200 OK</li>\n<li>该 Mixin 的 list 方法会对自动对数据进行 过滤和分页</li>\n</ul>\n<p>源代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    List a queryset.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 过滤</span></span><br><span class=\"line\">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class=\"line\">        <span class=\"comment\"># 分页</span></span><br><span class=\"line\">        page = self.paginate_queryset(queryset)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> page <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            serializer = self.get_serializer(page, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.get_paginated_response(serializer.data)</span><br><span class=\"line\">        <span class=\"comment\"># 序列化</span></span><br><span class=\"line\">        serializer = self.get_serializer(queryset, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>示例</li>\n</ul>\n<h2 id=\"-code8-\"><a class=\"markdownIt-Anchor\" href=\"#-code8-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListView</span>(<span class=\"params\">ListModelMixin, GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;self.list(request)&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"2-createmodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#2-createmodelmixin\"></a> 2) CreateModelMixin</h4>\n<p>创建视图扩展类，提供 <code>create(request, *args, **kwargs)</code> 方法，创建和保存一个新的 model 实例。</p>\n<ul>\n<li>成功 - 返回 201 状态码</li>\n<li>失败 - 返回 400 错误</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code9-\"><a class=\"markdownIt-Anchor\" href=\"#-code9-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Create a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取序列化器</span></span><br><span class=\"line\">        serializer = self.get_serializer(data=request.data)</span><br><span class=\"line\">        <span class=\"comment\"># 验证</span></span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 保存</span></span><br><span class=\"line\">        self.perform_create(serializer)</span><br><span class=\"line\">        headers = self.get_success_headers(serializer.data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_create</span>(<span class=\"params\">self, serializer</span>):</span></span><br><span class=\"line\">        serializer.save()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_success_headers</span>(<span class=\"params\">self, data</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"string\">&#x27;Location&#x27;</span>: <span class=\"built_in\">str</span>(data[api_settings.URL_FIELD_NAME])&#125;</span><br><span class=\"line\">        <span class=\"keyword\">except</span> (TypeError, KeyError):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;&#125;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"3-retrievemodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#3-retrievemodelmixin\"></a> 3) RetrieveModelMixin</h4>\n<p>详情视图扩展类，提供一个 <code>retrieve(request, *args, **kwargs)</code> 方法，可以快速返回一个存在的数据对象。</p>\n<ul>\n<li>存在 - 返回 200</li>\n<li>不存在 - 返回 404</li>\n</ul>\n<p>源代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RetrieveModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Retrieve a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">retrieve</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取对象，会检查对象的权限</span></span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        <span class=\"comment\"># 序列化</span></span><br><span class=\"line\">        serializer = self.get_serializer(instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>示例</li>\n</ul>\n<h2 id=\"-code11-\"><a class=\"markdownIt-Anchor\" href=\"#-code11-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookDetailView</span>(<span class=\"params\">RetrieveModelMixin, GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, pk</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;self.retrieve(request)&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"4-updatemodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#4-updatemodelmixin\"></a> 4) UpdateModelMixin</h4>\n<p>更新视图扩展类，提供 update(request, *args, **kwargs)方法，可以更新一个存在的数据对象。</p>\n<ul>\n<li>成功返回 200；</li>\n<li>校验失败-返回 400</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UpdateModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Update a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        partial = kwargs.pop(<span class=\"string\">&#x27;partial&#x27;</span>, <span class=\"literal\">False</span>)</span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        serializer = self.get_serializer(instance, data=request.data, partial=partial)</span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        self.perform_update(serializer)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">getattr</span>(instance, <span class=\"string\">&#x27;_prefetched_objects_cache&#x27;</span>, <span class=\"literal\">None</span>):</span><br><span class=\"line\">            <span class=\"comment\"># If &#x27;prefetch_related&#x27; has been applied to a queryset, we need to</span></span><br><span class=\"line\">            <span class=\"comment\"># forcibly invalidate the prefetch cache on the instance.</span></span><br><span class=\"line\">            instance._prefetched_objects_cache = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_update</span>(<span class=\"params\">self, serializer</span>):</span></span><br><span class=\"line\">            serializer.save()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">partial_update</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">                kwargs[<span class=\"string\">&#x27;partial&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> self.update(request, *args, **kwargs)</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"5-destroymodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#5-destroymodelmixin\"></a> 5) DestroyModelMixin</h4>\n<p>删除视图扩展类，提供 destroy(request, *args, **kwargs)方法，可以快速实现删除一个存在的数据对象。</p>\n<ul>\n<li>成功返回 204，</li>\n<li>不存在返回 404。</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code13-\"><a class=\"markdownIt-Anchor\" href=\"#-code13-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DestroyModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Destroy a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">destroy</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        self.perform_destroy(instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(status=status.HTTP_204_NO_CONTENT)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_destroy</span>(<span class=\"params\">self, instance</span>):</span></span><br><span class=\"line\">        instance.delete()</span><br></pre></td></tr></table></figure></h2>\n<h5 id=\"示例-genericapiview-结合视图扩展类实现-api-接口\"><a class=\"markdownIt-Anchor\" href=\"#示例-genericapiview-结合视图扩展类实现-api-接口\"></a> 示例 - GenericAPIView 结合视图扩展类实现 api 接口</h5>\n<h2 id=\"-code14-\"><a class=\"markdownIt-Anchor\" href=\"#-code14-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> GenericAPIView</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin, CreateModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Students2GenericAPIView</span>(<span class=\"params\">GenericAPIView, ListModelMixin, CreateModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()           <span class=\"comment\"># 本次视图类中要操作的数据[必填]</span></span><br><span class=\"line\">    serializer_class = StudentModelSerializer  <span class=\"comment\"># 本次视图类中要调用的默认序列化器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取多个学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.<span class=\"built_in\">list</span>(request)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;添加学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.create(request)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> RetrieveModelMixin, UpdateModelMixin, DestroyModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student2GenericAPIView</span>(<span class=\"params\">GenericAPIView, RetrieveModelMixin, UpdateModelMixin, DestroyModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 在使用GenericAPIView视图获取或操作单个数据时,视图方法中的代表主键的参数最好是pk</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.retrieve(request,pk)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">put</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;更新一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.update(request,pk)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;删除一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.destroy(request,pk)</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"genericapiview-的视图子类\"><a class=\"markdownIt-Anchor\" href=\"#genericapiview-的视图子类\"></a> GenericAPIView 的视图子类</h3>\n<p>以下类是具体的通用视图。为通常用到的那些，除非你需要深度定制的行为。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">同时继承 GenericAPIView 及5个扩展类</span><br><span class=\"line\">    CreateAPIView            post</span><br><span class=\"line\">    ListAPIView              get(多个)</span><br><span class=\"line\">    RetrieveAPIView          get(单个)</span><br><span class=\"line\">    DestoryAPIView           delete</span><br><span class=\"line\">    UpdateAPIView            put和putch</span><br><span class=\"line\">    RetrieveUpdateAPIView         get、put、patch</span><br><span class=\"line\">    RetrieveUpdateDestoryAPIView  get、put、patch、delete</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-createapiview\"><a class=\"markdownIt-Anchor\" href=\"#1-createapiview\"></a> 1) CreateAPIView</h4>\n<ul>\n<li>提供 post 方法</li>\n<li>继承自： GenericAPIView、CreateModelMixin</li>\n</ul>\n<h4 id=\"2-listapiview\"><a class=\"markdownIt-Anchor\" href=\"#2-listapiview\"></a> 2) ListAPIView</h4>\n<ul>\n<li>提供 get 方法</li>\n<li>继承自：GenericAPIView、ListModelMixin</li>\n</ul>\n<h4 id=\"3-retrieveapiview\"><a class=\"markdownIt-Anchor\" href=\"#3-retrieveapiview\"></a> 3) RetrieveAPIView</h4>\n<ul>\n<li>提供 get 方法</li>\n<li>继承自： GenericAPIView、RetrieveModelMixin</li>\n</ul>\n<h4 id=\"4-destoryapiview\"><a class=\"markdownIt-Anchor\" href=\"#4-destoryapiview\"></a> 4) DestoryAPIView</h4>\n<ul>\n<li>提供 delete 方法</li>\n<li>继承自：GenericAPIView、DestoryModelMixin</li>\n</ul>\n<h4 id=\"5-updateapiview\"><a class=\"markdownIt-Anchor\" href=\"#5-updateapiview\"></a> 5) UpdateAPIView</h4>\n<ul>\n<li>提供 put 和 patch 方法</li>\n<li>继承自：GenericAPIView、UpdateModelMixin</li>\n</ul>\n<h4 id=\"6-retrieveupdateapiview\"><a class=\"markdownIt-Anchor\" href=\"#6-retrieveupdateapiview\"></a> 6) RetrieveUpdateAPIView</h4>\n<ul>\n<li>提供 get、put、patch 方法</li>\n<li>继承自： GenericAPIView、RetrieveModelMixin、UpdateModelMixin</li>\n</ul>\n<h4 id=\"7-retrieveupdatedestoryapiview\"><a class=\"markdownIt-Anchor\" href=\"#7-retrieveupdatedestoryapiview\"></a> 7) RetrieveUpdateDestoryAPIView</h4>\n<ul>\n<li>提供 get、put、patch、delete 方法</li>\n<li>继承自：GenericAPIView、RetrieveModelMixin、UpdateModelMixin、DestoryModelMixin</li>\n</ul>\n<h5 id=\"示例-genericapiview-的视图子类-对书籍的增删查改\"><a class=\"markdownIt-Anchor\" href=\"#示例-genericapiview-的视图子类-对书籍的增删查改\"></a> 示例 - GenericAPIView 的视图子类 对书籍的增删查改</h5>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> CreateAPIView,ListAPIView,RetrieveAPIView,UpdateAPIView,DestoryAPIView</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book4View</span>(<span class=\"params\">ListAPIView, CreateAPIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取所有，新增一个&quot;&quot;&quot;</span></span><br><span class=\"line\">    queryset = Book.objects</span><br><span class=\"line\">    serializer_class = BookSerializer</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book4DetailView</span>(<span class=\"params\">UpdateAPIView, RetrieveAPIView, DestoryAPIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;单条数据进行 修改、获取、删除&quot;&quot;&quot;</span></span><br><span class=\"line\">    queryset = Book.objects</span><br><span class=\"line\">    serializer_class = BookSerializer</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">path(<span class=\"string\">&#x27;books4/&#x27;</span>, views.Book4View.as_view())</span><br><span class=\"line\">re_path(<span class=\"string\">&#x27;books4/(?P&lt;pk&gt;\\d+)&#x27;</span>, views.Book4DetailView.as_views())</span><br></pre></td></tr></table></figure>","more":"<p>简介</p>\n<h2 id=\"-code0-\"><a class=\"markdownIt-Anchor\" href=\"#-code0-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;from rest_framework.generics import GenericAPIView</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">继承自<span class=\"string\">&quot;APIVIew&quot;</span>，</span><br><span class=\"line\">    - 增加了：</span><br><span class=\"line\">        <span class=\"number\">1</span> 操作序列化器</span><br><span class=\"line\">        <span class=\"number\">2</span> 数据库查询的方法，</span><br><span class=\"line\"></span><br><span class=\"line\">    - 作用：</span><br><span class=\"line\">        为下面Mixin扩展类的执行提供方法支持。使用时，可搭配一个或多个Mixin扩展类。</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"序列化器使用的属性与方法\"><a class=\"markdownIt-Anchor\" href=\"#序列化器使用的属性与方法\"></a> 序列化器使用的属性与方法</h4>\n<ul>\n<li>\n<p>属性</p>\n<ul>\n<li><strong>serializer_class</strong> - 知名视图使用的序列化器</li>\n</ul>\n</li>\n<li>\n<p>方法</p>\n</li>\n<li>\n<p><strong>get_serializer_class(self)</strong></p>\n<ul>\n<li>返回应用于序列化的类。默认为返回 serializer_class 属性的值。</li>\n<li>适用场景：<strong>一个视图类中调用多个序列化器</strong>\n<ul>\n<li>根据不同条件 - 执行不同的序列化器对象</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_serializer_class</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> self.request.user.is_staff:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FullAccountSerializer</span><br><span class=\"line\">    <span class=\"keyword\">return</span> BasicAccountSerializer</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>get_serializer(self, args, *kwargs)</strong></p>\n<ul>\n<li>返回序列化器对象，主要用来提供给 Mixin 扩展类使用，如果我们在视图中想要获取序列化器对象，也可以直接调用此方法。</li>\n<li><strong>该方法在提供序列化器对象的时候，会向序列化器对象的 context 属性补充三个数据：request、format、view</strong>，这三个数据对象可以在定义序列化器时使用。\n<ul>\n<li><strong>request</strong> - 当前视图的请求对象</li>\n<li><strong>view</strong> - 当前视图的类视图对象</li>\n<li>format - 当前请求期望返回的数据格式</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h4 id=\"数据库查询的属性与方法\"><a class=\"markdownIt-Anchor\" href=\"#数据库查询的属性与方法\"></a> 数据库查询的属性与方法</h4>\n<p>属性</p>\n<ul>\n<li>\n<p><strong>queryset</strong>: 指明使用的数据查询集</p>\n</li>\n<li>\n<p>lookup_field</p>\n</li>\n<li>\n<p>lookup_url_kwarg</p>\n</li>\n<li>\n<p>方法</p>\n<ul>\n<li>\n<p><strong>get_queryset(self)</strong></p>\n<ul>\n<li>返回<strong>视图使用的查询集</strong>，主要用来提供给 Mixin 扩展类使用，</li>\n<li>是列表视图 list 与详情视图 detail 获取数据的基础，</li>\n<li>默认返回 queryset 属性，可以重写，例如：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">    user = self.request.user</span><br><span class=\"line\">    <span class=\"keyword\">return</span> user.accounts.<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>get_object(self)</strong></p>\n<ul>\n<li>返回<strong>详细视图的模型类数据对象</strong>，主要用来提供给 Mixin 扩展类使用。</li>\n<li>在视图中可以调用该方法获取详情信息的模型类对象。\n<ul>\n<li>若详情访问的模型类对象不存在，会返回 404。</li>\n</ul>\n</li>\n<li>该方法会默认使用 APIView 提供的<code>check_object_permissions</code>方法检查当前对象是否有权限被访问。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># url(r&#x27;^books/(?P&lt;pk&gt;\\d+)/$&#x27;, views.BookDetailView.as_view()),</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookDetailView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, pk</span>):</span></span><br><span class=\"line\">        book = <span class=\"string\">&quot;self.get_object()&quot;</span> <span class=\"comment\"># get_object()方法根据pk参数查找queryset中的数据对象</span></span><br><span class=\"line\">        serializer = self.get_serializer(book)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h4 id=\"其他可设置的属性\"><a class=\"markdownIt-Anchor\" href=\"#其他可设置的属性\"></a> 其他可设置的属性</h4>\n<ul>\n<li>\n<p><strong>pagination_class</strong> - 指明分页控制类</p>\n</li>\n<li>\n<p><strong>filter_backends</strong> - 指明过滤控制后端</p>\n</li>\n</ul>\n<hr />\n<p>代码：</p>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> GenericAPIView</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"><span class=\"keyword\">from</span> .serializers <span class=\"keyword\">import</span> StudentModelSerializer, StudentModel2Serializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.response <span class=\"keyword\">import</span> Response</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentsGenericAPIView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()           <span class=\"comment\"># 本次视图类中要操作的数据[必填]</span></span><br><span class=\"line\">    serializer_class = StudentModelSerializer  <span class=\"comment\"># 本次视图类中要调用的默认序列化器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取所有学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_queryset(), many=True)&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        data = request.data</span><br><span class=\"line\">        serializer = self.get_serializer(data=data)</span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        instance = serializer.save()</span><br><span class=\"line\">        serializer = self.get_serializer(instance=instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentGenericAPIView</span>(<span class=\"params\">GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_serializer_class</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;重写获取序列化器类的方法&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.request.method == <span class=\"string\">&quot;GET&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> StudentModel2Serializer</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 在使用GenericAPIView视图获取或操作单个数据时,视图方法中的代表主键的参数最好是pk</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_object())&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">put</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        data = request.data</span><br><span class=\"line\">        serializer = <span class=\"string\">&quot;self.get_serializer(instance=self.get_object(), data=data)&quot;</span></span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        serializer.save()</span><br><span class=\"line\">        serializer = self.get_serializer(instance=self.get_object())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>序列化器类</li>\n</ul>\n<h2 id=\"-code5-\"><a class=\"markdownIt-Anchor\" href=\"#-code5-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework <span class=\"keyword\">import</span> serializers</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelSerializer</span>(<span class=\"params\">serializers.ModelSerializer</span>):</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model= Student</span><br><span class=\"line\">        fields = <span class=\"string\">&quot;__all__&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModel2Serializer</span>(<span class=\"params\">serializers.ModelSerializer</span>):</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model= Student</span><br><span class=\"line\">        fields = (<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;class_null&quot;</span>)</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"mixins-5-个视图扩展类\"><a class=\"markdownIt-Anchor\" href=\"#mixins-5-个视图扩展类\"></a> Mixins - 5 个视图扩展类</h3>\n<p>（结合 GenericAPIView 使用）</p>\n<h2 id=\"-code6-\"><a class=\"markdownIt-Anchor\" href=\"#-code6-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">由于使用GenericAPIView时，多了很多重复方法，因此在此基础上封装 将增删改查扩展了类中</span><br><span class=\"line\"></span><br><span class=\"line\">可与GenericAPIView配合使用</span><br><span class=\"line\"></span><br><span class=\"line\">    ListModelMixin      获取多条（过滤和分页）</span><br><span class=\"line\">    CreateModelMixin    创建</span><br><span class=\"line\">    RetrieveModelMixin  获取一条</span><br><span class=\"line\">    UpdateModelMixin    更新</span><br><span class=\"line\">    DestroyModelMixin   删除</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"1-listmodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#1-listmodelmixin\"></a> 1) ListModelMixin</h4>\n<p>列表视图扩展类,提供 <code>list(request, *args, **kwargs)</code> 方法，快速实现列表视图</p>\n<ul>\n<li>有数据时，则返回 200 OK</li>\n<li>该 Mixin 的 list 方法会对自动对数据进行 过滤和分页</li>\n</ul>\n<p>源代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    List a queryset.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 过滤</span></span><br><span class=\"line\">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class=\"line\">        <span class=\"comment\"># 分页</span></span><br><span class=\"line\">        page = self.paginate_queryset(queryset)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> page <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            serializer = self.get_serializer(page, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.get_paginated_response(serializer.data)</span><br><span class=\"line\">        <span class=\"comment\"># 序列化</span></span><br><span class=\"line\">        serializer = self.get_serializer(queryset, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>示例</li>\n</ul>\n<h2 id=\"-code8-\"><a class=\"markdownIt-Anchor\" href=\"#-code8-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListView</span>(<span class=\"params\">ListModelMixin, GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;self.list(request)&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"2-createmodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#2-createmodelmixin\"></a> 2) CreateModelMixin</h4>\n<p>创建视图扩展类，提供 <code>create(request, *args, **kwargs)</code> 方法，创建和保存一个新的 model 实例。</p>\n<ul>\n<li>成功 - 返回 201 状态码</li>\n<li>失败 - 返回 400 错误</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code9-\"><a class=\"markdownIt-Anchor\" href=\"#-code9-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Create a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取序列化器</span></span><br><span class=\"line\">        serializer = self.get_serializer(data=request.data)</span><br><span class=\"line\">        <span class=\"comment\"># 验证</span></span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 保存</span></span><br><span class=\"line\">        self.perform_create(serializer)</span><br><span class=\"line\">        headers = self.get_success_headers(serializer.data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_create</span>(<span class=\"params\">self, serializer</span>):</span></span><br><span class=\"line\">        serializer.save()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_success_headers</span>(<span class=\"params\">self, data</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"string\">&#x27;Location&#x27;</span>: <span class=\"built_in\">str</span>(data[api_settings.URL_FIELD_NAME])&#125;</span><br><span class=\"line\">        <span class=\"keyword\">except</span> (TypeError, KeyError):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;&#125;</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"3-retrievemodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#3-retrievemodelmixin\"></a> 3) RetrieveModelMixin</h4>\n<p>详情视图扩展类，提供一个 <code>retrieve(request, *args, **kwargs)</code> 方法，可以快速返回一个存在的数据对象。</p>\n<ul>\n<li>存在 - 返回 200</li>\n<li>不存在 - 返回 404</li>\n</ul>\n<p>源代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RetrieveModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Retrieve a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">retrieve</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取对象，会检查对象的权限</span></span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        <span class=\"comment\"># 序列化</span></span><br><span class=\"line\">        serializer = self.get_serializer(instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>示例</li>\n</ul>\n<h2 id=\"-code11-\"><a class=\"markdownIt-Anchor\" href=\"#-code11-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookDetailView</span>(<span class=\"params\">RetrieveModelMixin, GenericAPIView</span>):</span></span><br><span class=\"line\">    queryset = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = BookInfoSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, pk</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;self.retrieve(request)&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"4-updatemodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#4-updatemodelmixin\"></a> 4) UpdateModelMixin</h4>\n<p>更新视图扩展类，提供 update(request, *args, **kwargs)方法，可以更新一个存在的数据对象。</p>\n<ul>\n<li>成功返回 200；</li>\n<li>校验失败-返回 400</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UpdateModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Update a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        partial = kwargs.pop(<span class=\"string\">&#x27;partial&#x27;</span>, <span class=\"literal\">False</span>)</span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        serializer = self.get_serializer(instance, data=request.data, partial=partial)</span><br><span class=\"line\">        serializer.is_valid(raise_exception=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        self.perform_update(serializer)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">getattr</span>(instance, <span class=\"string\">&#x27;_prefetched_objects_cache&#x27;</span>, <span class=\"literal\">None</span>):</span><br><span class=\"line\">            <span class=\"comment\"># If &#x27;prefetch_related&#x27; has been applied to a queryset, we need to</span></span><br><span class=\"line\">            <span class=\"comment\"># forcibly invalidate the prefetch cache on the instance.</span></span><br><span class=\"line\">            instance._prefetched_objects_cache = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_update</span>(<span class=\"params\">self, serializer</span>):</span></span><br><span class=\"line\">            serializer.save()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">partial_update</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">                kwargs[<span class=\"string\">&#x27;partial&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> self.update(request, *args, **kwargs)</span><br></pre></td></tr></table></figure></h2>\n<h4 id=\"5-destroymodelmixin\"><a class=\"markdownIt-Anchor\" href=\"#5-destroymodelmixin\"></a> 5) DestroyModelMixin</h4>\n<p>删除视图扩展类，提供 destroy(request, *args, **kwargs)方法，可以快速实现删除一个存在的数据对象。</p>\n<ul>\n<li>成功返回 204，</li>\n<li>不存在返回 404。</li>\n</ul>\n<p>源代码</p>\n<h2 id=\"-code13-\"><a class=\"markdownIt-Anchor\" href=\"#-code13-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DestroyModelMixin</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Destroy a model instance.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">destroy</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        instance = self.get_object()</span><br><span class=\"line\">        self.perform_destroy(instance)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(status=status.HTTP_204_NO_CONTENT)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">perform_destroy</span>(<span class=\"params\">self, instance</span>):</span></span><br><span class=\"line\">        instance.delete()</span><br></pre></td></tr></table></figure></h2>\n<h5 id=\"示例-genericapiview-结合视图扩展类实现-api-接口\"><a class=\"markdownIt-Anchor\" href=\"#示例-genericapiview-结合视图扩展类实现-api-接口\"></a> 示例 - GenericAPIView 结合视图扩展类实现 api 接口</h5>\n<h2 id=\"-code14-\"><a class=\"markdownIt-Anchor\" href=\"#-code14-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> GenericAPIView</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin, CreateModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Students2GenericAPIView</span>(<span class=\"params\">GenericAPIView, ListModelMixin, CreateModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()           <span class=\"comment\"># 本次视图类中要操作的数据[必填]</span></span><br><span class=\"line\">    serializer_class = StudentModelSerializer  <span class=\"comment\"># 本次视图类中要调用的默认序列化器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取多个学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.<span class=\"built_in\">list</span>(request)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;添加学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.create(request)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> RetrieveModelMixin, UpdateModelMixin, DestroyModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student2GenericAPIView</span>(<span class=\"params\">GenericAPIView, RetrieveModelMixin, UpdateModelMixin, DestroyModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 在使用GenericAPIView视图获取或操作单个数据时,视图方法中的代表主键的参数最好是pk</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.retrieve(request,pk)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">put</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;更新一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.update(request,pk)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete</span>(<span class=\"params\">self,request,pk</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;删除一条数据&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.destroy(request,pk)</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"genericapiview-的视图子类\"><a class=\"markdownIt-Anchor\" href=\"#genericapiview-的视图子类\"></a> GenericAPIView 的视图子类</h3>\n<p>以下类是具体的通用视图。为通常用到的那些，除非你需要深度定制的行为。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">同时继承 GenericAPIView 及5个扩展类</span><br><span class=\"line\">    CreateAPIView            post</span><br><span class=\"line\">    ListAPIView              get(多个)</span><br><span class=\"line\">    RetrieveAPIView          get(单个)</span><br><span class=\"line\">    DestoryAPIView           delete</span><br><span class=\"line\">    UpdateAPIView            put和putch</span><br><span class=\"line\">    RetrieveUpdateAPIView         get、put、patch</span><br><span class=\"line\">    RetrieveUpdateDestoryAPIView  get、put、patch、delete</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-createapiview\"><a class=\"markdownIt-Anchor\" href=\"#1-createapiview\"></a> 1) CreateAPIView</h4>\n<ul>\n<li>提供 post 方法</li>\n<li>继承自： GenericAPIView、CreateModelMixin</li>\n</ul>\n<h4 id=\"2-listapiview\"><a class=\"markdownIt-Anchor\" href=\"#2-listapiview\"></a> 2) ListAPIView</h4>\n<ul>\n<li>提供 get 方法</li>\n<li>继承自：GenericAPIView、ListModelMixin</li>\n</ul>\n<h4 id=\"3-retrieveapiview\"><a class=\"markdownIt-Anchor\" href=\"#3-retrieveapiview\"></a> 3) RetrieveAPIView</h4>\n<ul>\n<li>提供 get 方法</li>\n<li>继承自： GenericAPIView、RetrieveModelMixin</li>\n</ul>\n<h4 id=\"4-destoryapiview\"><a class=\"markdownIt-Anchor\" href=\"#4-destoryapiview\"></a> 4) DestoryAPIView</h4>\n<ul>\n<li>提供 delete 方法</li>\n<li>继承自：GenericAPIView、DestoryModelMixin</li>\n</ul>\n<h4 id=\"5-updateapiview\"><a class=\"markdownIt-Anchor\" href=\"#5-updateapiview\"></a> 5) UpdateAPIView</h4>\n<ul>\n<li>提供 put 和 patch 方法</li>\n<li>继承自：GenericAPIView、UpdateModelMixin</li>\n</ul>\n<h4 id=\"6-retrieveupdateapiview\"><a class=\"markdownIt-Anchor\" href=\"#6-retrieveupdateapiview\"></a> 6) RetrieveUpdateAPIView</h4>\n<ul>\n<li>提供 get、put、patch 方法</li>\n<li>继承自： GenericAPIView、RetrieveModelMixin、UpdateModelMixin</li>\n</ul>\n<h4 id=\"7-retrieveupdatedestoryapiview\"><a class=\"markdownIt-Anchor\" href=\"#7-retrieveupdatedestoryapiview\"></a> 7) RetrieveUpdateDestoryAPIView</h4>\n<ul>\n<li>提供 get、put、patch、delete 方法</li>\n<li>继承自：GenericAPIView、RetrieveModelMixin、UpdateModelMixin、DestoryModelMixin</li>\n</ul>\n<h5 id=\"示例-genericapiview-的视图子类-对书籍的增删查改\"><a class=\"markdownIt-Anchor\" href=\"#示例-genericapiview-的视图子类-对书籍的增删查改\"></a> 示例 - GenericAPIView 的视图子类 对书籍的增删查改</h5>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.generics <span class=\"keyword\">import</span> CreateAPIView,ListAPIView,RetrieveAPIView,UpdateAPIView,DestoryAPIView</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book4View</span>(<span class=\"params\">ListAPIView, CreateAPIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取所有，新增一个&quot;&quot;&quot;</span></span><br><span class=\"line\">    queryset = Book.objects</span><br><span class=\"line\">    serializer_class = BookSerializer</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book4DetailView</span>(<span class=\"params\">UpdateAPIView, RetrieveAPIView, DestoryAPIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;单条数据进行 修改、获取、删除&quot;&quot;&quot;</span></span><br><span class=\"line\">    queryset = Book.objects</span><br><span class=\"line\">    serializer_class = BookSerializer</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">path(<span class=\"string\">&#x27;books4/&#x27;</span>, views.Book4View.as_view())</span><br><span class=\"line\">re_path(<span class=\"string\">&#x27;books4/(?P&lt;pk&gt;\\d+)&#x27;</span>, views.Book4DetailView.as_views())</span><br></pre></td></tr></table></figure>","categories":[{"name":"restful","path":"api/categories/restful.json"},{"name":"django","path":"api/categories/django.json"}],"tags":[{"name":"drf","path":"api/tags/drf.json"},{"name":"django","path":"api/tags/django.json"},{"name":"python","path":"api/tags/python.json"}]}
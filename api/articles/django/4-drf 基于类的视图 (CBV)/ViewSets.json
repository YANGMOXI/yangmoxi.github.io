{"title":"drf视图类 - ViewSet","slug":"django/4-drf 基于类的视图 (CBV)/ViewSets","date":"2021-01-18T10:34:55.639Z","updated":"2021-01-18T16:01:47.404Z","comments":true,"path":"api/articles/django/4-drf 基于类的视图 (CBV)/ViewSets.json","excerpt":null,"covers":null,"content":"<h2 id=\"视图集-viewset\"><a class=\"markdownIt-Anchor\" href=\"#视图集-viewset\"></a> 视图集 ViewSet</h2>\n<p>使用视图集ViewSet，可以将一系列逻辑相关的动作放到一个类中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list()        提供一组数据</span><br><span class=\"line\">retrieve()    提供单个数据</span><br><span class=\"line\">create()      创建数据</span><br><span class=\"line\">update()      保存数据</span><br><span class=\"line\">destory()     删除数据</span><br></pre></td></tr></table></figure>\n<p>ViewSet视图集类不再实现get()、post()等方法，而是<strong>实现动作 action 如 list() 、create() 等</strong>。</p>\n<p><strong>视图集只在使用as_view()方法的时候，才会将action动作与具体请求方式对应上</strong>。如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ViewSet</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookInfoViewSet</span>(<span class=\"params\">ViewSet</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;...&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        books = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">        serializer = BookInfoSerializer(books, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">retrieve</span>(<span class=\"params\">self, request, pk=<span class=\"literal\">None</span></span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            books = BookInfo.objects.get(<span class=\"built_in\">id</span>=pk)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> BookInfo.DoesNotExist:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(status=status.HTTP_404_NOT_FOUND)</span><br><span class=\"line\"></span><br><span class=\"line\">        serializer = BookInfoSerializer(books)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<p>在设置路由时，我们可以如下操作</p>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r&#x27;^books/$&#x27;</span>, BookInfoViewSet.as_view(&#123;<span class=\"string\">&#x27;get&#x27;</span>:<span class=\"string\">&#x27;list&#x27;</span>&#125;),</span><br><span class=\"line\">    url(<span class=\"string\">r&#x27;^books/(?P&lt;pk&gt;\\d+)/$&#x27;</span>, BookInfoViewSet.as_view(&#123;<span class=\"string\">&#x27;get&#x27;</span>:<span class=\"string\">&#x27;retrieve&#x27;</span>&#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"常用视图集父类\"><a class=\"markdownIt-Anchor\" href=\"#常用视图集父类\"></a> 常用视图集父类</h3>\n<h4 id=\"viewset\"><a class=\"markdownIt-Anchor\" href=\"#viewset\"></a> ViewSet</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">继承自<span class=\"string\">&quot;APIView&quot;</span>与<span class=\"string\">&quot;ViewSetMixin&quot;</span>，</span><br><span class=\"line\">    作用 与APIView基本类似，提供了</span><br><span class=\"line\">        - 身份认证</span><br><span class=\"line\">        - 权限校验</span><br><span class=\"line\">        - 流量管理等。</span><br><span class=\"line\"></span><br><span class=\"line\">ViewSet主要通过继承<span class=\"string\">&quot;ViewSetMixin&quot;</span></span><br><span class=\"line\">    实现在调用as_view()时传入字典（如&#123;‘get’:’<span class=\"built_in\">list</span>’&#125;）的映射处理工作。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">注：</span></span><br><span class=\"line\"><span class=\"string\">    在ViewSet中，没有提供任何动作action方法，需要我们自己实现action方法</span></span><br><span class=\"line\"><span class=\"string\">        纯自定义</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"genericviewset\"><a class=\"markdownIt-Anchor\" href=\"#genericviewset\"></a> GenericViewSet</h4>\n<p>使用ViewSet通常并不方便，因为list、retrieve、create、update、destory等方法都需要自己编写，而这些方法与前面讲过的Mixin扩展类提供的方法同名，所以我们可以通过继承<code>Mixin</code>扩展类来复用这些方法而无需自己编写。但是Mixin扩展类依赖与<code>GenericAPIView</code>，所以还需要继承<code>GenericAPIView</code>。</p>\n<p>GenericViewSet就帮助我们完成了这样的继承工作，继承自<code>GenericAPIView</code>与<code>ViewSetMixin</code>，在实现了调用as_view()时传入字典（如{‘get’:‘list’}）的映射处理工作的同时，还提供了GenericAPIView提供的基础方法，可以直接搭配Mixin扩展类使用。</p>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> GenericViewSet</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin,CreateModelMixin,RetrieveModelMixin,UpdateModelMixin,DestroyModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student4ViewSet</span>(<span class=\"params\">GenericViewSet,ListModelMixin,CreateModelMixin,RetrieveModelMixin,UpdateModelMixin,DestroyModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&quot;students7/&quot;</span>, views.Student4ViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;list&quot;</span>, <span class=\"string\">&quot;post&quot;</span>: <span class=\"string\">&quot;create&quot;</span>&#125;)),</span><br><span class=\"line\">    re_path(<span class=\"string\">&quot;students7/(?P&lt;pk&gt;\\d+)/&quot;</span>, views.Student4ViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;retrieve&quot;</span>,<span class=\"string\">&quot;put&quot;</span>:<span class=\"string\">&quot;update&quot;</span>,<span class=\"string\">&quot;delete&quot;</span>:<span class=\"string\">&quot;destroy&quot;</span>&#125;)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"modelviewset\"><a class=\"markdownIt-Anchor\" href=\"#modelviewset\"></a> ModelViewSet</h4>\n<p>继承自<code>GenericViewSet</code>，同时包括了ListModelMixin、RetrieveModelMixin、CreateModelMixin、UpdateModelMixin、DestoryModelMixin。</p>\n<h4 id=\"readonlymodelviewset\"><a class=\"markdownIt-Anchor\" href=\"#readonlymodelviewset\"></a> ReadOnlyModelViewSet</h4>\n<p>继承自<code>GenericViewSet</code>，同时包括了ListModelMixin、RetrieveModelMixin。</p>\n<hr />\n<h5 id=\"视图集中定义附加action动作\"><a class=\"markdownIt-Anchor\" href=\"#视图集中定义附加action动作\"></a> 视图集中定义附加action动作</h5>\n<p>在视图集中，除了上述默认的方法动作外，还可以添加自定义动作。</p>\n<ul>\n<li>举例：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ModelViewSet,ReadOnlyModelViewSet</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelViewSet</span>(<span class=\"params\">ModelViewSet</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;学生登录功能&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;message&quot;</span>:<span class=\"string\">&quot;登录成功&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&quot;students8/&quot;</span>, views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;list&quot;</span>, <span class=\"string\">&quot;post&quot;</span>: <span class=\"string\">&quot;create&quot;</span>&#125;)),</span><br><span class=\"line\">    re_path(<span class=\"string\">&quot;students8/(?P&lt;pk&gt;\\d+)/&quot;</span>,</span><br><span class=\"line\">            views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;retrieve&quot;</span>, <span class=\"string\">&quot;put&quot;</span>: <span class=\"string\">&quot;update&quot;</span>, <span class=\"string\">&quot;delete&quot;</span>: <span class=\"string\">&quot;destroy&quot;</span>&#125;)),</span><br><span class=\"line\"></span><br><span class=\"line\">    path(<span class=\"string\">&quot;stu/login/&quot;</span>,views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>:<span class=\"string\">&quot;login&quot;</span>&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h5 id=\"action属性\"><a class=\"markdownIt-Anchor\" href=\"#action属性\"></a> action属性</h5>\n<p>在视图集中，我们可以通过action对象属性来获取当前请求视图集时的action动作是哪个。</p>\n<p>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ModelViewSet</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"><span class=\"keyword\">from</span> .serializers <span class=\"keyword\">import</span> StudentModelSerializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.response <span class=\"keyword\">import</span> Response</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelViewSet</span>(<span class=\"params\">ModelViewSet</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_new_5</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取最近添加的5个学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        ...  <span class=\"comment\"># 操作数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;print(self.action)&quot;</span>   <span class=\"comment\"># 获取本次请求的视图方法名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">通过路由访问到当前方法中.可以看到本次的action就是请求的方法名</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"视图集-viewset\"><a class=\"markdownIt-Anchor\" href=\"#视图集-viewset\"></a> 视图集 ViewSet</h2>\n<p>使用视图集ViewSet，可以将一系列逻辑相关的动作放到一个类中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list()        提供一组数据</span><br><span class=\"line\">retrieve()    提供单个数据</span><br><span class=\"line\">create()      创建数据</span><br><span class=\"line\">update()      保存数据</span><br><span class=\"line\">destory()     删除数据</span><br></pre></td></tr></table></figure>\n<p>ViewSet视图集类不再实现get()、post()等方法，而是<strong>实现动作 action 如 list() 、create() 等</strong>。</p>\n<p><strong>视图集只在使用as_view()方法的时候，才会将action动作与具体请求方式对应上</strong>。如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ViewSet</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookInfoViewSet</span>(<span class=\"params\">ViewSet</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;...&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">list</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        books = BookInfo.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">        serializer = BookInfoSerializer(books, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">retrieve</span>(<span class=\"params\">self, request, pk=<span class=\"literal\">None</span></span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            books = BookInfo.objects.get(<span class=\"built_in\">id</span>=pk)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> BookInfo.DoesNotExist:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(status=status.HTTP_404_NOT_FOUND)</span><br><span class=\"line\"></span><br><span class=\"line\">        serializer = BookInfoSerializer(books)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure>\n<p>在设置路由时，我们可以如下操作</p>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r&#x27;^books/$&#x27;</span>, BookInfoViewSet.as_view(&#123;<span class=\"string\">&#x27;get&#x27;</span>:<span class=\"string\">&#x27;list&#x27;</span>&#125;),</span><br><span class=\"line\">    url(<span class=\"string\">r&#x27;^books/(?P&lt;pk&gt;\\d+)/$&#x27;</span>, BookInfoViewSet.as_view(&#123;<span class=\"string\">&#x27;get&#x27;</span>:<span class=\"string\">&#x27;retrieve&#x27;</span>&#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"常用视图集父类\"><a class=\"markdownIt-Anchor\" href=\"#常用视图集父类\"></a> 常用视图集父类</h3>\n<h4 id=\"viewset\"><a class=\"markdownIt-Anchor\" href=\"#viewset\"></a> ViewSet</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">继承自<span class=\"string\">&quot;APIView&quot;</span>与<span class=\"string\">&quot;ViewSetMixin&quot;</span>，</span><br><span class=\"line\">    作用 与APIView基本类似，提供了</span><br><span class=\"line\">        - 身份认证</span><br><span class=\"line\">        - 权限校验</span><br><span class=\"line\">        - 流量管理等。</span><br><span class=\"line\"></span><br><span class=\"line\">ViewSet主要通过继承<span class=\"string\">&quot;ViewSetMixin&quot;</span></span><br><span class=\"line\">    实现在调用as_view()时传入字典（如&#123;‘get’:’<span class=\"built_in\">list</span>’&#125;）的映射处理工作。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">注：</span></span><br><span class=\"line\"><span class=\"string\">    在ViewSet中，没有提供任何动作action方法，需要我们自己实现action方法</span></span><br><span class=\"line\"><span class=\"string\">        纯自定义</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"genericviewset\"><a class=\"markdownIt-Anchor\" href=\"#genericviewset\"></a> GenericViewSet</h4>\n<p>使用ViewSet通常并不方便，因为list、retrieve、create、update、destory等方法都需要自己编写，而这些方法与前面讲过的Mixin扩展类提供的方法同名，所以我们可以通过继承<code>Mixin</code>扩展类来复用这些方法而无需自己编写。但是Mixin扩展类依赖与<code>GenericAPIView</code>，所以还需要继承<code>GenericAPIView</code>。</p>\n<p>GenericViewSet就帮助我们完成了这样的继承工作，继承自<code>GenericAPIView</code>与<code>ViewSetMixin</code>，在实现了调用as_view()时传入字典（如{‘get’:‘list’}）的映射处理工作的同时，还提供了GenericAPIView提供的基础方法，可以直接搭配Mixin扩展类使用。</p>\n<ul>\n<li>视图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> GenericViewSet</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.mixins <span class=\"keyword\">import</span> ListModelMixin,CreateModelMixin,RetrieveModelMixin,UpdateModelMixin,DestroyModelMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student4ViewSet</span>(<span class=\"params\">GenericViewSet,ListModelMixin,CreateModelMixin,RetrieveModelMixin,UpdateModelMixin,DestroyModelMixin</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&quot;students7/&quot;</span>, views.Student4ViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;list&quot;</span>, <span class=\"string\">&quot;post&quot;</span>: <span class=\"string\">&quot;create&quot;</span>&#125;)),</span><br><span class=\"line\">    re_path(<span class=\"string\">&quot;students7/(?P&lt;pk&gt;\\d+)/&quot;</span>, views.Student4ViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;retrieve&quot;</span>,<span class=\"string\">&quot;put&quot;</span>:<span class=\"string\">&quot;update&quot;</span>,<span class=\"string\">&quot;delete&quot;</span>:<span class=\"string\">&quot;destroy&quot;</span>&#125;)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"modelviewset\"><a class=\"markdownIt-Anchor\" href=\"#modelviewset\"></a> ModelViewSet</h4>\n<p>继承自<code>GenericViewSet</code>，同时包括了ListModelMixin、RetrieveModelMixin、CreateModelMixin、UpdateModelMixin、DestoryModelMixin。</p>\n<h4 id=\"readonlymodelviewset\"><a class=\"markdownIt-Anchor\" href=\"#readonlymodelviewset\"></a> ReadOnlyModelViewSet</h4>\n<p>继承自<code>GenericViewSet</code>，同时包括了ListModelMixin、RetrieveModelMixin。</p>\n<hr />\n<h5 id=\"视图集中定义附加action动作\"><a class=\"markdownIt-Anchor\" href=\"#视图集中定义附加action动作\"></a> 视图集中定义附加action动作</h5>\n<p>在视图集中，除了上述默认的方法动作外，还可以添加自定义动作。</p>\n<ul>\n<li>举例：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ModelViewSet,ReadOnlyModelViewSet</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelViewSet</span>(<span class=\"params\">ModelViewSet</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;学生登录功能&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;message&quot;</span>:<span class=\"string\">&quot;登录成功&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>路由</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&quot;students8/&quot;</span>, views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;list&quot;</span>, <span class=\"string\">&quot;post&quot;</span>: <span class=\"string\">&quot;create&quot;</span>&#125;)),</span><br><span class=\"line\">    re_path(<span class=\"string\">&quot;students8/(?P&lt;pk&gt;\\d+)/&quot;</span>,</span><br><span class=\"line\">            views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>: <span class=\"string\">&quot;retrieve&quot;</span>, <span class=\"string\">&quot;put&quot;</span>: <span class=\"string\">&quot;update&quot;</span>, <span class=\"string\">&quot;delete&quot;</span>: <span class=\"string\">&quot;destroy&quot;</span>&#125;)),</span><br><span class=\"line\"></span><br><span class=\"line\">    path(<span class=\"string\">&quot;stu/login/&quot;</span>,views.StudentModelViewSet.as_view(&#123;<span class=\"string\">&quot;get&quot;</span>:<span class=\"string\">&quot;login&quot;</span>&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h5 id=\"action属性\"><a class=\"markdownIt-Anchor\" href=\"#action属性\"></a> action属性</h5>\n<p>在视图集中，我们可以通过action对象属性来获取当前请求视图集时的action动作是哪个。</p>\n<p>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.viewsets <span class=\"keyword\">import</span> ModelViewSet</span><br><span class=\"line\"><span class=\"keyword\">from</span> students.models <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"><span class=\"keyword\">from</span> .serializers <span class=\"keyword\">import</span> StudentModelSerializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.response <span class=\"keyword\">import</span> Response</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentModelViewSet</span>(<span class=\"params\">ModelViewSet</span>):</span></span><br><span class=\"line\">    queryset = Student.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    serializer_class = StudentModelSerializer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_new_5</span>(<span class=\"params\">self,request</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取最近添加的5个学生信息&quot;&quot;&quot;</span></span><br><span class=\"line\">        ...  <span class=\"comment\"># 操作数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;print(self.action)&quot;</span>   <span class=\"comment\"># 获取本次请求的视图方法名</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">通过路由访问到当前方法中.可以看到本次的action就是请求的方法名</span><br></pre></td></tr></table></figure>","categories":[{"name":"restful","path":"api/categories/restful.json"},{"name":"django","path":"api/categories/django.json"}],"tags":[{"name":"drf","path":"api/tags/drf.json"},{"name":"django","path":"api/tags/django.json"},{"name":"python","path":"api/tags/python.json"}]}
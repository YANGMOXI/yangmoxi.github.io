{"title":"JWT认证","slug":"django/9-jwt认证","date":"2021-01-18T10:34:55.613Z","updated":"2021-01-20T03:09:53.292Z","comments":true,"path":"api/articles/django/9-jwt认证.json","excerpt":null,"covers":null,"content":"<h2 id=\"1-jwt简介\"><a class=\"markdownIt-Anchor\" href=\"#1-jwt简介\"></a> 1 JWT简介</h2>\n<h2 id=\"-code0-\"><a class=\"markdownIt-Anchor\" href=\"#-code0-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json web token，一般用于用户认证（前后端分离/微信学校程序/app开发）</span><br><span class=\"line\"></span><br><span class=\"line\">在用户注册或登录后，我们想记录用户的登录状态，或者为用户创建身份认证的凭证。</span><br><span class=\"line\">    我们不再使用Session认证机制，</span><br><span class=\"line\">    而使用Json Web Token（本质就是token）认证机制。</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"基于传统的token认证\"><a class=\"markdownIt-Anchor\" href=\"#基于传统的token认证\"></a> 基于传统的token认证</h3>\n<h2 id=\"-code1-\"><a class=\"markdownIt-Anchor\" href=\"#-code1-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 用户登录，服务端返回token，并将token保存在服务端。</span><br><span class=\"line\"><span class=\"number\">2</span> 以后用户再来访问时，需要携带token，服务端获取token后，再去数据库中获取token进行校验</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"jwt认证\"><a class=\"markdownIt-Anchor\" href=\"#jwt认证\"></a> jwt认证</h3>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 用户登录，服务端给用户返回一个token(服务端不保存)</span><br><span class=\"line\"><span class=\"number\">2</span> 以后用户再来访问，需要携带token，服务端获取token后，在做token校验</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">优势：相较于传统的token，无需再服务端保存token</span></span><br><span class=\"line\"><span class=\"string\">    只需对客户端请求 加密解密</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h2 id=\"2-jwt实现过程\"><a class=\"markdownIt-Anchor\" href=\"#2-jwt实现过程\"></a> 2 jwt实现过程</h2>\n<ul>\n<li>\n<p><strong>第一步</strong> 用户提交用户名密码到服务端，如果校验成功，使用jwt创建一个token，并返回给用户</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure>\n<p><strong>注意: jwt生成的token是由三段字符串组成,并且用 . 连接起来</strong></p>\n<ul>\n<li>第一段字符串 <strong>HEADER</strong>：内部包含算法(HS256)、token类型\n<ul>\n<li>json转化成字符串，然后做 base64url 加密（base64加密 ; + _特殊符号替换 ）</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;alg&quot;</span>: <span class=\"string\">&quot;HS256&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;typ&quot;</span>: <span class=\"string\">&quot;JWT&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>第二段字符串 <strong>payload</strong>，自定义值.\n<ul>\n<li>json转化成字符串,然后做 base64url 加密(base64加密 ; + _ ).</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;123123&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;chenggen&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;exp&quot;</span>: <span class=\"number\">1516239022</span>  <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>第三段字符串:  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步: 第1,2部分密文拼接起来</span><br><span class=\"line\">    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><br><span class=\"line\"></span><br><span class=\"line\">第二步:对前2部分密文进行HS256加密 + 加盐</span><br><span class=\"line\"></span><br><span class=\"line\">第三步:对HS256加密后的密文再做base64url加密</span><br></pre></td></tr></table></figure>\n</li>\n<li>以后用户再来访问时候,需要携带token,后端需要对token进行校验\n<ul>\n<li>获取token</li>\n<li>第一步: 对token进行切割</li>\n</ul>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第二步: 对第二段进行base64url解密,并获取payload信息,检测token是否已经超时?</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;123123&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;chenggen&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;exp&quot;</span>: <span class=\"number\">1516239022</span> <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第三步: 把第1,2端拼接,再次执行sha256加密</li>\n</ul>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步: 第1,2部分密文拼接起来</span><br><span class=\"line\">    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><br><span class=\"line\"></span><br><span class=\"line\">第二步:对前2部分密文进行HS256加密 + 加盐</span><br><span class=\"line\"></span><br><span class=\"line\">密文 &#x3D; base64解密(SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c)</span><br><span class=\"line\">如果相等,表示token未被修改过.(认证通过)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2 id=\"3-应用\"><a class=\"markdownIt-Anchor\" href=\"#3-应用\"></a> 3 应用</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">pip install pyjwt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用</span></span><br><span class=\"line\">pyjwt.encode 生成token</span><br><span class=\"line\"></span><br><span class=\"line\">pyjwt.decode token解密</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>代码实现\n<ul>\n<li>view</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JWTLoginView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于jwt用户登录&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        user = request.data.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        pwd = request.data.get(<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        user_object = models.UserInfo.objects.<span class=\"built_in\">filter</span>(username=user, password=pwd).first()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;jwt生成token&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">import</span> jwt</span><br><span class=\"line\">        <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">        <span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\">        <span class=\"keyword\">from</span> settings <span class=\"keyword\">import</span> SALT</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造header</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;typ&#x27;</span>: <span class=\"string\">&#x27;jwt&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;alg&#x27;</span>: <span class=\"string\">&#x27;HS256&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\"># 构造payload</span></span><br><span class=\"line\">        payload = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user_id&#x27;</span>: user_object.<span class=\"built_in\">id</span>,         <span class=\"comment\"># 自定义用户ID</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: user_object.username , <span class=\"comment\"># 自定义用户名</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;exp&#x27;</span>: datetime.datetime.utcnow() + datetime.timedelta(minutes=<span class=\"number\">5</span>)   <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        token = jwt.encode(payload=payload, key=SALT, algorithm=<span class=\"string\">&quot;HS256&quot;</span>, headers=headers).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1001</span>, <span class=\"string\">&#x27;data&#x27;</span>: token&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JWTOrderView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取订单列表&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span>  </span><br><span class=\"line\">        <span class=\"comment\"># 获取token，并校验合法性</span></span><br><span class=\"line\">        token = request.query_params.get(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 1 切割</span></span><br><span class=\"line\">        <span class=\"comment\"># 2 解密第二段、判断过期</span></span><br><span class=\"line\">        <span class=\"comment\"># 3 验证第三段合法性</span></span><br><span class=\"line\">        <span class=\"keyword\">import</span> jwt</span><br><span class=\"line\">        <span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\">        <span class=\"keyword\">from</span> settings <span class=\"keyword\">import</span> SALT</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"literal\">None</span></span><br><span class=\"line\">        msg = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            payload = jwt.decode(token, SALT, <span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> exceptions.ExpiredSignatureError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;token已失效&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.DecodeError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;token认证失败&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.InvalidTokenError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;非法的token&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> payload:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>:msg&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1000</span>, <span class=\"string\">&#x27;data&#x27;</span>:<span class=\"string\">&quot;订单列表&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">```</span><br><span class=\"line\">* setting</span><br><span class=\"line\">```</span><br><span class=\"line\">SALT = <span class=\"string\">&#x27;iv%x6xo7l7_u9bf_u!9#g#m*)*=ej@bek5)(@u3kh*72+unjv=&#x27;</span></span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"代码封装\"><a class=\"markdownIt-Anchor\" href=\"#代码封装\"></a> 代码封装</h3>\n<ul>\n<li>jwt认证组件</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;api/extensions/auth.py&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> settings</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.authentication <span class=\"keyword\">import</span> BaseAuthentication</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.exceptions <span class=\"keyword\">import</span> AuthenticationFailed</span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JwtQueryParamsAuthentication</span>(<span class=\"params\">BaseAuthentication</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">authenticate</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取token并判断token的合法性</span></span><br><span class=\"line\">        <span class=\"comment\"># 1.切割</span></span><br><span class=\"line\">        <span class=\"comment\"># 2.解密第二段/判断过期</span></span><br><span class=\"line\">        <span class=\"comment\"># 3.验证第三段合法性</span></span><br><span class=\"line\"></span><br><span class=\"line\">        token = request.query_params.get(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">        salt = settings.SECRET_KEY</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            payload = jwt.decode(token, salt, <span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> exceptions.ExpiredSignatureError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span>  AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1003</span>,<span class=\"string\">&#x27;error&#x27;</span>:<span class=\"string\">&quot;token已失效&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.DecodeError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>: <span class=\"string\">&quot;token认证失败&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.InvalidTokenError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>: <span class=\"string\">&quot;非法的token&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 三种操作</span></span><br><span class=\"line\">        <span class=\"comment\"># 1. 跑出异常,后序不在执行.</span></span><br><span class=\"line\">        <span class=\"comment\"># 2. return一个元组  (1,2),认证通过; 在视图中如果调用request.user 就是元组的第一个值;request.auth</span></span><br><span class=\"line\">        <span class=\"comment\"># 3. None</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (payload,token)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>jwt生成token</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;api/utils/jwt_auth.py&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> settings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_token</span>(<span class=\"params\">payload, timeout=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    salt = settings.SECRET_KEY</span><br><span class=\"line\">    <span class=\"comment\"># 构造header</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;typ&#x27;</span>: <span class=\"string\">&#x27;jwt&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;alg&#x27;</span>: <span class=\"string\">&#x27;HS256&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># 构造payload</span></span><br><span class=\"line\">    payload[<span class=\"string\">&#x27;exp&#x27;</span>] = datetime.datetime.utcnow() + datetime.timedelta(minutes=timeout)</span><br><span class=\"line\">    token = jwt.encode(payload=payload, key=salt, algorithm=<span class=\"string\">&quot;HS256&quot;</span>, headers=headers).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> token</span><br></pre></td></tr></table></figure>\n<ul>\n<li>view</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> api.utils.jwt_auth <span class=\"keyword\">import</span> create_token</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProLoginView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;jwt登录&quot;&quot;&quot;</span></span><br><span class=\"line\">    authentication_classes = []  <span class=\"comment\"># 局部禁用认证</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request,*args,**kwargs</span>):</span></span><br><span class=\"line\">        user = request.data.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        pwd = request.data.get(<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\">        user_object = models.UserInfo.objects.<span class=\"built_in\">filter</span>(username=user,password=pwd).first()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> user_object:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1000</span>,<span class=\"string\">&#x27;error&#x27;</span>:<span class=\"string\">&#x27;用户名或密码错误&#x27;</span>&#125;)</span><br><span class=\"line\">        token = create_token(&#123;<span class=\"string\">&#x27;id&#x27;</span>:user_object.<span class=\"built_in\">id</span>,<span class=\"string\">&#x27;name&#x27;</span>:user_object.username&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1001</span>, <span class=\"string\">&#x27;data&#x27;</span>: token&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProOrderView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取订单&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        print(request.user)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(<span class=\"string\">&#x27;订单列表&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"http://settings.py\">settings.py</a></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局配置jwt认证</span></span><br><span class=\"line\">REST_FRAMEWORK = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;DEFAULT_AUTHENTICATION_CLASSES&quot;</span>: [<span class=\"string\">&#x27;api.extensions.auth.JwtQueryParamsAuthentication&#x27;</span>,]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-扩展\"><a class=\"markdownIt-Anchor\" href=\"#4-扩展\"></a> 4 扩展</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install djangorestframework-jwt</span><br></pre></td></tr></table></figure>\n<p>djangorestframework-jwt本质是调用pyjwt实现.</p>\n<h2 id=\"5-总结\"><a class=\"markdownIt-Anchor\" href=\"#5-总结\"></a> 5 总结</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">强烈建议使用该模块jwt</span></span><br><span class=\"line\"><span class=\"string\">    - django中使用 （不依赖drf）</span></span><br><span class=\"line\"><span class=\"string\">        - drf</span></span><br><span class=\"line\"><span class=\"string\">        - 非drf</span></span><br><span class=\"line\"><span class=\"string\">    - flask中使用</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">djangorestframework-jwt</span></span><br><span class=\"line\"><span class=\"string\">    只能用于django-drf，太局限</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"1-jwt简介\"><a class=\"markdownIt-Anchor\" href=\"#1-jwt简介\"></a> 1 JWT简介</h2>\n<h2 id=\"-code0-\"><a class=\"markdownIt-Anchor\" href=\"#-code0-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json web token，一般用于用户认证（前后端分离/微信学校程序/app开发）</span><br><span class=\"line\"></span><br><span class=\"line\">在用户注册或登录后，我们想记录用户的登录状态，或者为用户创建身份认证的凭证。</span><br><span class=\"line\">    我们不再使用Session认证机制，</span><br><span class=\"line\">    而使用Json Web Token（本质就是token）认证机制。</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"基于传统的token认证\"><a class=\"markdownIt-Anchor\" href=\"#基于传统的token认证\"></a> 基于传统的token认证</h3>\n<h2 id=\"-code1-\"><a class=\"markdownIt-Anchor\" href=\"#-code1-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 用户登录，服务端返回token，并将token保存在服务端。</span><br><span class=\"line\"><span class=\"number\">2</span> 以后用户再来访问时，需要携带token，服务端获取token后，再去数据库中获取token进行校验</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"jwt认证\"><a class=\"markdownIt-Anchor\" href=\"#jwt认证\"></a> jwt认证</h3>\n<h2 id=\"-code2-\"><a class=\"markdownIt-Anchor\" href=\"#-code2-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 用户登录，服务端给用户返回一个token(服务端不保存)</span><br><span class=\"line\"><span class=\"number\">2</span> 以后用户再来访问，需要携带token，服务端获取token后，在做token校验</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">优势：相较于传统的token，无需再服务端保存token</span></span><br><span class=\"line\"><span class=\"string\">    只需对客户端请求 加密解密</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></h2>\n<h2 id=\"2-jwt实现过程\"><a class=\"markdownIt-Anchor\" href=\"#2-jwt实现过程\"></a> 2 jwt实现过程</h2>\n<ul>\n<li>\n<p><strong>第一步</strong> 用户提交用户名密码到服务端，如果校验成功，使用jwt创建一个token，并返回给用户</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure>\n<p><strong>注意: jwt生成的token是由三段字符串组成,并且用 . 连接起来</strong></p>\n<ul>\n<li>第一段字符串 <strong>HEADER</strong>：内部包含算法(HS256)、token类型\n<ul>\n<li>json转化成字符串，然后做 base64url 加密（base64加密 ; + _特殊符号替换 ）</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;alg&quot;</span>: <span class=\"string\">&quot;HS256&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;typ&quot;</span>: <span class=\"string\">&quot;JWT&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>第二段字符串 <strong>payload</strong>，自定义值.\n<ul>\n<li>json转化成字符串,然后做 base64url 加密(base64加密 ; + _ ).</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;123123&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;chenggen&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;exp&quot;</span>: <span class=\"number\">1516239022</span>  <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>第三段字符串:  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步: 第1,2部分密文拼接起来</span><br><span class=\"line\">    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><br><span class=\"line\"></span><br><span class=\"line\">第二步:对前2部分密文进行HS256加密 + 加盐</span><br><span class=\"line\"></span><br><span class=\"line\">第三步:对HS256加密后的密文再做base64url加密</span><br></pre></td></tr></table></figure>\n</li>\n<li>以后用户再来访问时候,需要携带token,后端需要对token进行校验\n<ul>\n<li>获取token</li>\n<li>第一步: 对token进行切割</li>\n</ul>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第二步: 对第二段进行base64url解密,并获取payload信息,检测token是否已经超时?</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;123123&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;chenggen&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;exp&quot;</span>: <span class=\"number\">1516239022</span> <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第三步: 把第1,2端拼接,再次执行sha256加密</li>\n</ul>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步: 第1,2部分密文拼接起来</span><br><span class=\"line\">    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><br><span class=\"line\"></span><br><span class=\"line\">第二步:对前2部分密文进行HS256加密 + 加盐</span><br><span class=\"line\"></span><br><span class=\"line\">密文 &#x3D; base64解密(SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c)</span><br><span class=\"line\">如果相等,表示token未被修改过.(认证通过)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2 id=\"3-应用\"><a class=\"markdownIt-Anchor\" href=\"#3-应用\"></a> 3 应用</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">pip install pyjwt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用</span></span><br><span class=\"line\">pyjwt.encode 生成token</span><br><span class=\"line\"></span><br><span class=\"line\">pyjwt.decode token解密</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>代码实现\n<ul>\n<li>view</li>\n</ul>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JWTLoginView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于jwt用户登录&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        user = request.data.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        pwd = request.data.get(<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        user_object = models.UserInfo.objects.<span class=\"built_in\">filter</span>(username=user, password=pwd).first()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;jwt生成token&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">import</span> jwt</span><br><span class=\"line\">        <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">        <span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\">        <span class=\"keyword\">from</span> settings <span class=\"keyword\">import</span> SALT</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造header</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;typ&#x27;</span>: <span class=\"string\">&#x27;jwt&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;alg&#x27;</span>: <span class=\"string\">&#x27;HS256&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\"># 构造payload</span></span><br><span class=\"line\">        payload = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user_id&#x27;</span>: user_object.<span class=\"built_in\">id</span>,         <span class=\"comment\"># 自定义用户ID</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: user_object.username , <span class=\"comment\"># 自定义用户名</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;exp&#x27;</span>: datetime.datetime.utcnow() + datetime.timedelta(minutes=<span class=\"number\">5</span>)   <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        token = jwt.encode(payload=payload, key=SALT, algorithm=<span class=\"string\">&quot;HS256&quot;</span>, headers=headers).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1001</span>, <span class=\"string\">&#x27;data&#x27;</span>: token&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"-code12-\"><a class=\"markdownIt-Anchor\" href=\"#-code12-\"></a> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JWTOrderView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取订单列表&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span>  </span><br><span class=\"line\">        <span class=\"comment\"># 获取token，并校验合法性</span></span><br><span class=\"line\">        token = request.query_params.get(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 1 切割</span></span><br><span class=\"line\">        <span class=\"comment\"># 2 解密第二段、判断过期</span></span><br><span class=\"line\">        <span class=\"comment\"># 3 验证第三段合法性</span></span><br><span class=\"line\">        <span class=\"keyword\">import</span> jwt</span><br><span class=\"line\">        <span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\">        <span class=\"keyword\">from</span> settings <span class=\"keyword\">import</span> SALT</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"literal\">None</span></span><br><span class=\"line\">        msg = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            payload = jwt.decode(token, SALT, <span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> exceptions.ExpiredSignatureError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;token已失效&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.DecodeError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;token认证失败&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.InvalidTokenError:</span><br><span class=\"line\">            msg = <span class=\"string\">&#x27;非法的token&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> payload:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>:msg&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1000</span>, <span class=\"string\">&#x27;data&#x27;</span>:<span class=\"string\">&quot;订单列表&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">```</span><br><span class=\"line\">* setting</span><br><span class=\"line\">```</span><br><span class=\"line\">SALT = <span class=\"string\">&#x27;iv%x6xo7l7_u9bf_u!9#g#m*)*=ej@bek5)(@u3kh*72+unjv=&#x27;</span></span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"代码封装\"><a class=\"markdownIt-Anchor\" href=\"#代码封装\"></a> 代码封装</h3>\n<ul>\n<li>jwt认证组件</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;api/extensions/auth.py&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> settings</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.authentication <span class=\"keyword\">import</span> BaseAuthentication</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.exceptions <span class=\"keyword\">import</span> AuthenticationFailed</span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">from</span> jwt <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JwtQueryParamsAuthentication</span>(<span class=\"params\">BaseAuthentication</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">authenticate</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取token并判断token的合法性</span></span><br><span class=\"line\">        <span class=\"comment\"># 1.切割</span></span><br><span class=\"line\">        <span class=\"comment\"># 2.解密第二段/判断过期</span></span><br><span class=\"line\">        <span class=\"comment\"># 3.验证第三段合法性</span></span><br><span class=\"line\"></span><br><span class=\"line\">        token = request.query_params.get(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">        salt = settings.SECRET_KEY</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            payload = jwt.decode(token, salt, <span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> exceptions.ExpiredSignatureError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span>  AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1003</span>,<span class=\"string\">&#x27;error&#x27;</span>:<span class=\"string\">&quot;token已失效&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.DecodeError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>: <span class=\"string\">&quot;token认证失败&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.InvalidTokenError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AuthenticationFailed(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1003</span>, <span class=\"string\">&#x27;error&#x27;</span>: <span class=\"string\">&quot;非法的token&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 三种操作</span></span><br><span class=\"line\">        <span class=\"comment\"># 1. 跑出异常,后序不在执行.</span></span><br><span class=\"line\">        <span class=\"comment\"># 2. return一个元组  (1,2),认证通过; 在视图中如果调用request.user 就是元组的第一个值;request.auth</span></span><br><span class=\"line\">        <span class=\"comment\"># 3. None</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (payload,token)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>jwt生成token</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;api/utils/jwt_auth.py&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> settings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_token</span>(<span class=\"params\">payload, timeout=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    salt = settings.SECRET_KEY</span><br><span class=\"line\">    <span class=\"comment\"># 构造header</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;typ&#x27;</span>: <span class=\"string\">&#x27;jwt&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;alg&#x27;</span>: <span class=\"string\">&#x27;HS256&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># 构造payload</span></span><br><span class=\"line\">    payload[<span class=\"string\">&#x27;exp&#x27;</span>] = datetime.datetime.utcnow() + datetime.timedelta(minutes=timeout)</span><br><span class=\"line\">    token = jwt.encode(payload=payload, key=salt, algorithm=<span class=\"string\">&quot;HS256&quot;</span>, headers=headers).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> token</span><br></pre></td></tr></table></figure>\n<ul>\n<li>view</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> api.utils.jwt_auth <span class=\"keyword\">import</span> create_token</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProLoginView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;jwt登录&quot;&quot;&quot;</span></span><br><span class=\"line\">    authentication_classes = []  <span class=\"comment\"># 局部禁用认证</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self,request,*args,**kwargs</span>):</span></span><br><span class=\"line\">        user = request.data.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        pwd = request.data.get(<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\">        user_object = models.UserInfo.objects.<span class=\"built_in\">filter</span>(username=user,password=pwd).first()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> user_object:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>:<span class=\"number\">1000</span>,<span class=\"string\">&#x27;error&#x27;</span>:<span class=\"string\">&#x27;用户名或密码错误&#x27;</span>&#125;)</span><br><span class=\"line\">        token = create_token(&#123;<span class=\"string\">&#x27;id&#x27;</span>:user_object.<span class=\"built_in\">id</span>,<span class=\"string\">&#x27;name&#x27;</span>:user_object.username&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">1001</span>, <span class=\"string\">&#x27;data&#x27;</span>: token&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProOrderView</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取订单&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span></span><br><span class=\"line\">        print(request.user)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(<span class=\"string\">&#x27;订单列表&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"http://settings.py\">settings.py</a></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局配置jwt认证</span></span><br><span class=\"line\">REST_FRAMEWORK = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;DEFAULT_AUTHENTICATION_CLASSES&quot;</span>: [<span class=\"string\">&#x27;api.extensions.auth.JwtQueryParamsAuthentication&#x27;</span>,]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-扩展\"><a class=\"markdownIt-Anchor\" href=\"#4-扩展\"></a> 4 扩展</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install djangorestframework-jwt</span><br></pre></td></tr></table></figure>\n<p>djangorestframework-jwt本质是调用pyjwt实现.</p>\n<h2 id=\"5-总结\"><a class=\"markdownIt-Anchor\" href=\"#5-总结\"></a> 5 总结</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">强烈建议使用该模块jwt</span></span><br><span class=\"line\"><span class=\"string\">    - django中使用 （不依赖drf）</span></span><br><span class=\"line\"><span class=\"string\">        - drf</span></span><br><span class=\"line\"><span class=\"string\">        - 非drf</span></span><br><span class=\"line\"><span class=\"string\">    - flask中使用</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">djangorestframework-jwt</span></span><br><span class=\"line\"><span class=\"string\">    只能用于django-drf，太局限</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>","categories":[{"name":"token","path":"api/categories/token.json"}],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"jwt","path":"api/tags/jwt.json"},{"name":"token","path":"api/tags/token.json"}]}